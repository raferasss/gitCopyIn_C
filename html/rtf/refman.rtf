{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Versionador  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Versionador}
{\comment Gerado por doxygen 1.9.7.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Versionador}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b lista} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura da lista })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b lista_no} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura de n\'F3 da lista })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Version} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b src/{\b versionador.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/commands/{\b commands.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/commands/{\b commands.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/database/{\b database.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/database/{\b database.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b lista.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b lista.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b util.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b utils.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura lista\par \pard\plain 
{\tc\tcl2 \v lista}
{\xe \v lista}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura da lista. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaNo} * {\b primeiro}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura da lista. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v primeiro\:lista}
{\xe \v lista\:primeiro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaNo}* lista::primeiro}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ponteiro para o primeiro n\'F3 da lista. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/utils/{\b lista.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura lista_no\par \pard\plain 
{\tc\tcl2 \v lista_no}
{\xe \v lista_no}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura de n\'F3 da lista. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b info}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaNo} * {\b proximo}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura de n\'F3 da lista. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v info\:lista_no}
{\xe \v lista_no\:info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* lista_no::info}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Informa\'E7\'E3o do n\'F3. \par
}}
{\xe \v proximo\:lista_no}
{\xe \v lista_no\:proximo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaNo}* lista_no::proximo}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ponteiro para o pr\'F3ximo n\'F3. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/utils/{\b lista.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Version\par \pard\plain 
{\tc\tcl2 \v Version}
{\xe \v Version}
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
\par
{
{\f2 #include <database.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b identifier} [{\b MAX_IDENTIFIER_LENGTH}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v identifier\:Version}
{\xe \v Version\:identifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Version::identifier[{\b MAX_IDENTIFIER_LENGTH}]}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/database/{\b database.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo src/commands/commands.c\par \pard\plain 
{\tc\tcl2 \v src/commands/commands.c}
{\xe \v src/commands/commands.c}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "commands.h"}\par
{\f2 #include "../utils/utils.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "../database/database.h"}\par
{\f2 #include "../utils/lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b iniciarVersionador} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicia o versionador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarArquivos} (int argc, char *argv[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona arquivos ao snapshot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b registrarSnapshot} (const char *texto)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exibirLog} (int showContent)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exibe o log do versionador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarVersao} (const char *identificador)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra o conte\'FAdo de uma vers\'E3o espec\'EDfica. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mudarVersao} (const char *identificador)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reverterVersaoAtual} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reverte a vers\'E3o atual. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b saveSnapshotFilesInContent} (const char *identifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva os arquivos do snapshot no conte\'FAdo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getLogsContent} (char *file)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o conte\'FAdo dos logs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b changeVersion} (const char *identifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b restoreCurrentVersion} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura a vers\'E3o atual. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarArquivos\:commands.c}
{\xe \v commands.c\:adicionarArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adicionarArquivos (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona arquivos ao snapshot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argc} \cell }{N\'FAmero de argumentos. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argv} \cell }{Vetor de argumentos contendo os nomes dos arquivos.\cell }
{\row }
}
Percorre os argumentos passados e verifica se cada arquivo existe. Se o arquivo existir, adiciona ao snapshot e exibe uma mensagem de sucesso. Caso contr\'E1rio, exibe uma mensagem informando que o arquivo n\'E3o foi encontrado. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                                \{\par
32     {\cf19 for} ({\cf18 int} i = 0; i < argc; i++) \{\par
33         {\cf19 if} (fileExists(argv[i])) \{\par
34             addFileToSnapshot(argv[i]);\par
35             printInfo({\cf22 "Arquivo adicionado com sucesso."});\par
36         \} {\cf19 else} \{\par
37             printf({\cf22 "Arquivo n\'E3o encontrado: %s"}, argv[i]);\par
38         \}\par
39     \}\par
40 \}\par
}
}
{\xe \v changeVersion\:commands.c}
{\xe \v commands.c\:changeVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void changeVersion (const char *  {\i identifier})}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador da vers\'E3o.\cell }
{\row }
}
Verifica se a vers\'E3o com o identificador informado existe. Se existir, muda para essa vers\'E3o. Caso contr\'E1rio, exibe uma mensagem informando que a vers\'E3o n\'E3o existe. Faz um backup dos arquivos atuais em uma pasta tempor\'E1ria. Restaura os arquivos da vers\'E3o especificada. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 200                                            \{\par
201     {\cf20 // Mudar para a vers\'E3o com o identificador especificado}\par
202     {\cf20 // Salvar um backup dos arquivos atuais em uma pasta tempor\'E1ria}\par
203     {\cf20 // Restaurar os arquivos da vers\'E3o com o identificador especificado}\par
204 \par
205     {\cf20 // Verificar se a vers\'E3o com o identificador especificado existe}\par
206     {\cf19 if} (!versionExists(identifier)) \{\par
207         printf({\cf22 "A vers\'E3o %s n\'E3o existe.\\n"}, identifier);\par
208         {\cf19 return};\par
209     \}\par
210 \par
211     {\cf19 if} (directoryExists({\cf22 ".versionador/backup"})) \{\par
212         removeDirectory({\cf22 ".versionador/backup"});\par
213     \}\par
214 \par
215     createDirectory({\cf22 ".versionador/backup"});    \par
216     {\cf18 char} path[100];\par
217     strcpy(path,concatenatePaths({\cf22 ".versionador/content/"}, identifier));\par
218     Lista *header = lst_cria();\par
219     searchDirectoryFiles(path, header);\par
220     ListaNo* ptr = lst_returnNodeValid(header);\par
221 \par
222     \par
223     {\cf19 if}(ptr == NULL)\{\par
224     {\cf19 return};\par
225     \}{\cf19 else}\{\par
226     \par
227 \par
228     {\cf18 char}* fileOrigin = lst_infoValid(ptr);\par
229     {\cf18 char} copySec[100];\par
230     {\cf19 while} (fileOrigin != NULL)\par
231     \{   \par
232         strcpy(copySec, fileOrigin);\par
233         {\cf18 char} *fileDest = concatenatePaths({\cf22 ".versionador/backup"}, copySec);\par
234         writeTextFile(fileDest, {\cf22 ""});\par
235         copyFile(copySec, fileDest);\par
236         ptr = lst_nextNode(ptr);\par
237         fileOrigin = lst_infoValid(ptr);\par
238         free(fileDest);\par
239     \}\par
240     free(fileOrigin);\par
241     \par
242     \}\par
243 \par
244     searchDirectoryFiles(path, header); \par
245     ptr = lst_returnNodeValid(header);\par
246 \par
247     {\cf19 if}(ptr == NULL)\{\par
248     {\cf19 return};\par
249     \}{\cf19 else}\{\par
250     \par
251 \par
252     {\cf18 char}* fileOrigin = lst_infoValid(ptr);\par
253     \par
254     {\cf19 while} (fileOrigin != NULL)\par
255     \{   \par
256         {\cf18 char} *fileContentOrigin = concatenatePaths(path, fileOrigin);\par
257         removeFile(fileOrigin);\par
258         writeTextFile(fileOrigin, {\cf22 ""});\par
259         copyFile(fileContentOrigin, fileOrigin);\par
260         ptr = lst_nextNode(ptr);\par
261         fileOrigin = lst_infoValid(ptr);\par
262         free(fileContentOrigin);\par
263     \}\par
264     free(fileOrigin);\par
265     \par
266     \}\par
267 \par
268     lst_libera(header);\par
269 \}\par
}
}
{\xe \v exibirLog\:commands.c}
{\xe \v commands.c\:exibirLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void exibirLog (int  {\i showContent})}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exibe o log do versionador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i showContent} \cell }{Flag para exibir o conte\'FAdo dos arquivos nas vers\'F5es.\cell }
{\row }
}
Obt\'E9m o n\'FAmero de vers\'F5es e exibe uma mensagem informando que o log ser\'E1 exibido. Se o flag showContent for verdadeiro, exibe o conte\'FAdo dos arquivos em cada vers\'E3o. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                 \{\par
68     {\cf18 int} numVersions = getSnapshotInfo();\par
69     {\cf19 if} (showContent) \{\par
70         printInfo({\cf22 "Exibindo conte\'FAdo dos arquivos nas vers\'F5es:"});\par
71 \par
72         {\cf20 // Exibir o conte\'FAdo dos arquivos registrados em cada vers\'E3o}\par
73         {\cf19 for} ({\cf18 int} i = 0; i < numVersions; i++) \{\par
74             {\cf17 const} {\cf18 char}* versionIdentifier = getCurrentVersionIdentifier(i);\par
75 \par
76             {\cf20 // Obter o conte\'FAdo dos arquivos versionados na vers\'E3o atual}\par
77             getVersionContent(versionIdentifier, 1);\par
78         \}\par
79     \}\par
80 \}\par
}
}
{\xe \v getLogsContent\:commands.c}
{\xe \v commands.c\:getLogsContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getLogsContent (char *  {\i file})}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o conte\'FAdo dos logs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{Arquivo dos logs.\cell }
{\row }
}
Cria uma lista e a preenche com o conte\'FAdo do arquivo dos logs. Percorre a lista e exibe o conte\'FAdo das vers\'F5es correspondentes. Libera a mem\'F3ria alocada. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 167                                \{\par
168     Lista* header = lst_cria();\par
169     lst_populateList(file, header);\par
170     ListaNo* ptr = lst_returnNodeValid(header);\par
171     {\cf19 if}(ptr == NULL)\par
172     {\cf19 return};\par
173 \par
174     {\cf18 char}* info = lst_infoValid(ptr);\par
175     {\cf19 while} (info != NULL)\par
176     \{   \par
177     {\cf20 //printInfo(concatenatePaths("getLogsContent 100", info));}\par
178         getVersionContent(info, 1);\par
179         ptr = lst_nextNode(ptr);\par
180         info = lst_infoValid(ptr);\par
181     \}\par
182     \par
183     free(info);\par
184     free(ptr);\par
185     lst_libera(header);\par
186     \par
187 \}\par
}
}
{\xe \v iniciarVersionador\:commands.c}
{\xe \v commands.c\:iniciarVersionador}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void iniciarVersionador ()}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicia o versionador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria o banco de dados e exibe uma mensagem de sucesso. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                           \{\par
17     createDatabase();\par
18     printInfo({\cf22 "Versionador iniciado com sucesso."});\par
19 \}\par
}
}
{\xe \v mostrarVersao\:commands.c}
{\xe \v commands.c\:mostrarVersao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarVersao (const char *  {\i identificador})}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra o conte\'FAdo de uma vers\'E3o espec\'EDfica. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identificador} \cell }{Identificador da vers\'E3o.\cell }
{\row }
}
Obt\'E9m o conte\'FAdo dos arquivos na vers\'E3o correspondente ao identificador informado. Exibe o conte\'FAdo dos arquivos. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                               \{\par
91     getVersionContent(identificador, 1);\par
92 \}\par
}
}
{\xe \v mudarVersao\:commands.c}
{\xe \v commands.c\:mudarVersao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mudarVersao (const char *  {\i identificador})}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identificador} \cell }{Identificador da vers\'E3o.\cell }
{\row }
}
Verifica se a vers\'E3o com o identificador informado existe. Se existir, muda para essa vers\'E3o. Caso contr\'E1rio, exibe uma mensagem informando que a vers\'E3o n\'E3o existe. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103                                             \{\par
104     {\cf19 if} (versionExists(identificador)) \{\par
105         changeVersion(identificador);\par
106     \} {\cf19 else} \{\par
107         printf({\cf22 "A vers\'E3o %s n\'E3o existe."}, identificador);\par
108     \}\par
109 \}\par
}
}
{\xe \v registrarSnapshot\:commands.c}
{\xe \v commands.c\:registrarSnapshot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * registrarSnapshot (const char *  {\i texto})}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i texto} \cell }{Texto do snapshot. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna o identificador \'FAnico do snapshot.\par
}}Gera um identificador \'FAnico para o snapshot e o registra no banco de dados. Exibe uma mensagem de sucesso com o identificador gerado. Retorna o identificador gerado. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                            \{\par
53     {\cf18 char}* identifier = generateUniqueIdentifier();\par
54     registerSnapshot(identifier, texto);\par
55     printf({\cf22 "Snapshot registrado com sucesso. Identificador: %s"}, identifier);\par
56     {\cf19 return} identifier;\par
57 \}\par
}
}
{\xe \v restoreCurrentVersion\:commands.c}
{\xe \v commands.c\:restoreCurrentVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void restoreCurrentVersion ()}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura a vers\'E3o atual. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a pasta tempor\'E1ria de backup existe. Se n\'E3o existir, exibe uma mensagem de erro e retorna. Obt\'E9m a lista de arquivos na pasta de backup. Percorre a lista e restaura os arquivos para a vers\'E3o atual. Remove a pasta de backup. Exibe uma mensagem informando que os arquivos foram restaurados. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 282                              \{\par
283 \par
284     {\cf20 // Verificar se a pasta tempor\'E1ria de backup existe}\par
285     {\cf19 if} (!directoryExists({\cf22 ".versionador/backup"})) \{\par
286         printError({\cf22 "A pasta de backup n\'E3o existe."});\par
287         {\cf19 return};\par
288     \}\par
289 \par
290     {\cf18 char} path[] = {\cf22 ".versionador/backup"};\par
291     Lista *header = lst_cria();\par
292     searchDirectoryFiles(path, header);\par
293     ListaNo* ptr = lst_returnNodeValid(header);\par
294 \par
295     \par
296     {\cf18 char} copySec[100];\par
297     {\cf19 if}(ptr == NULL)\{\par
298     {\cf19 return};\par
299     \}{\cf19 else}\{\par
300     \par
301 \par
302     {\cf18 char}* fileOrigin = lst_infoValid(ptr);\par
303     \par
304     {\cf19 while} (fileOrigin != NULL)\par
305     \{   \par
306         strcpy(copySec, fileOrigin);\par
307         {\cf18 char} *fileBackupOrigin = concatenatePaths(path, copySec);\par
308         removeFile(copySec);\par
309         copyFile(fileBackupOrigin, copySec);\par
310         ptr = lst_nextNode(ptr);\par
311         fileOrigin = lst_infoValid(ptr);\par
312         free(fileBackupOrigin);\par
313     \}\par
314     free(fileOrigin);\par
315     \par
316     \}\par
317 \par
318     removeDirectory(path);\par
319     printInfo({\cf22 "Os arquivos foram restaurados para a vers\'E3o atual."});\par
320 \par
321     lst_libera(header);\par
322 \}\par
}
}
{\xe \v reverterVersaoAtual\:commands.c}
{\xe \v commands.c\:reverterVersaoAtual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void reverterVersaoAtual ()}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reverte a vers\'E3o atual. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura a vers\'E3o anterior da vers\'E3o atual. Exibe uma mensagem de sucesso. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                            \{\par
119     restoreCurrentVersion();\par
120     printInfo({\cf22 "Vers\'E3o atual revertida com sucesso."});\par
121 \}\par
}
}
{\xe \v saveSnapshotFilesInContent\:commands.c}
{\xe \v commands.c\:saveSnapshotFilesInContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void saveSnapshotFilesInContent (const char *  {\i identifier})}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva os arquivos do snapshot no conte\'FAdo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador do snapshot.\cell }
{\row }
}
Define o caminho para o identificador do snapshot. Popula uma lista com os nomes dos arquivos do pr\'F3ximo snapshot. Percorre a lista e adiciona o conte\'FAdo dos arquivos ao snapshot atual. Remove o arquivo que lista os arquivos do pr\'F3ximo snapshot. Libera a mem\'F3ria alocada. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 134                                                         \{\par
135     setPathToSnapshotIdentifier(identifier);\par
136     Lista* header = lst_cria();\par
137     lst_populateList({\cf22 ".versionador/snapshots/next_snapshot.txt"}, header);\par
138     ListaNo* ptr = lst_returnNodeValid(header);\par
139     {\cf19 if}(ptr == NULL)\par
140     {\cf19 return};\par
141 \par
142     {\cf18 char}* info = lst_infoValid(ptr);\par
143     {\cf19 while} (info != NULL)\par
144     \{   \par
145         \par
146         addContent(identifier, info);\par
147         ptr = lst_nextNode(ptr);\par
148         info = lst_infoValid(ptr);\par
149     \}\par
150     removeFile({\cf22 ".versionador/snapshots/next_snapshot.txt"});\par
151     \par
152     free(info);\par
153     free(ptr);\par
154     lst_libera(header);\par
155 \par
156 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo src/commands/commands.h\par \pard\plain 
{\tc\tcl2 \v src/commands/commands.h}
{\xe \v src/commands/commands.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b iniciarVersionador} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicia o versionador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarArquivos} (int argc, char *argv[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona arquivos ao snapshot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b registrarSnapshot} (const char *texto)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exibirLog} (int showContent)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exibe o log do versionador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarVersao} (const char *identificador)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra o conte\'FAdo de uma vers\'E3o espec\'EDfica. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mudarVersao} (const char *identificador)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reverterVersaoAtual} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reverte a vers\'E3o atual. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b saveSnapshotFilesInContent} (const char *identifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva os arquivos do snapshot no conte\'FAdo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getLogsContent} (char *file)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o conte\'FAdo dos logs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b changeVersion} (const char *identifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b restoreCurrentVersion} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura a vers\'E3o atual. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarArquivos\:commands.h}
{\xe \v commands.h\:adicionarArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adicionarArquivos (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona arquivos ao snapshot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argc} \cell }{N\'FAmero de argumentos. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argv} \cell }{Vetor de argumentos contendo os nomes dos arquivos.\cell }
{\row }
}
Percorre os argumentos passados e verifica se cada arquivo existe. Se o arquivo existir, adiciona ao snapshot e exibe uma mensagem de sucesso. Caso contr\'E1rio, exibe uma mensagem informando que o arquivo n\'E3o foi encontrado. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                                \{\par
32     {\cf19 for} ({\cf18 int} i = 0; i < argc; i++) \{\par
33         {\cf19 if} (fileExists(argv[i])) \{\par
34             addFileToSnapshot(argv[i]);\par
35             printInfo({\cf22 "Arquivo adicionado com sucesso."});\par
36         \} {\cf19 else} \{\par
37             printf({\cf22 "Arquivo n\'E3o encontrado: %s"}, argv[i]);\par
38         \}\par
39     \}\par
40 \}\par
}
}
{\xe \v changeVersion\:commands.h}
{\xe \v commands.h\:changeVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void changeVersion (const char *  {\i identifier})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador da vers\'E3o.\cell }
{\row }
}
Verifica se a vers\'E3o com o identificador informado existe. Se existir, muda para essa vers\'E3o. Caso contr\'E1rio, exibe uma mensagem informando que a vers\'E3o n\'E3o existe. Faz um backup dos arquivos atuais em uma pasta tempor\'E1ria. Restaura os arquivos da vers\'E3o especificada. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 200                                            \{\par
201     {\cf20 // Mudar para a vers\'E3o com o identificador especificado}\par
202     {\cf20 // Salvar um backup dos arquivos atuais em uma pasta tempor\'E1ria}\par
203     {\cf20 // Restaurar os arquivos da vers\'E3o com o identificador especificado}\par
204 \par
205     {\cf20 // Verificar se a vers\'E3o com o identificador especificado existe}\par
206     {\cf19 if} (!versionExists(identifier)) \{\par
207         printf({\cf22 "A vers\'E3o %s n\'E3o existe.\\n"}, identifier);\par
208         {\cf19 return};\par
209     \}\par
210 \par
211     {\cf19 if} (directoryExists({\cf22 ".versionador/backup"})) \{\par
212         removeDirectory({\cf22 ".versionador/backup"});\par
213     \}\par
214 \par
215     createDirectory({\cf22 ".versionador/backup"});    \par
216     {\cf18 char} path[100];\par
217     strcpy(path,concatenatePaths({\cf22 ".versionador/content/"}, identifier));\par
218     Lista *header = lst_cria();\par
219     searchDirectoryFiles(path, header);\par
220     ListaNo* ptr = lst_returnNodeValid(header);\par
221 \par
222     \par
223     {\cf19 if}(ptr == NULL)\{\par
224     {\cf19 return};\par
225     \}{\cf19 else}\{\par
226     \par
227 \par
228     {\cf18 char}* fileOrigin = lst_infoValid(ptr);\par
229     {\cf18 char} copySec[100];\par
230     {\cf19 while} (fileOrigin != NULL)\par
231     \{   \par
232         strcpy(copySec, fileOrigin);\par
233         {\cf18 char} *fileDest = concatenatePaths({\cf22 ".versionador/backup"}, copySec);\par
234         writeTextFile(fileDest, {\cf22 ""});\par
235         copyFile(copySec, fileDest);\par
236         ptr = lst_nextNode(ptr);\par
237         fileOrigin = lst_infoValid(ptr);\par
238         free(fileDest);\par
239     \}\par
240     free(fileOrigin);\par
241     \par
242     \}\par
243 \par
244     searchDirectoryFiles(path, header); \par
245     ptr = lst_returnNodeValid(header);\par
246 \par
247     {\cf19 if}(ptr == NULL)\{\par
248     {\cf19 return};\par
249     \}{\cf19 else}\{\par
250     \par
251 \par
252     {\cf18 char}* fileOrigin = lst_infoValid(ptr);\par
253     \par
254     {\cf19 while} (fileOrigin != NULL)\par
255     \{   \par
256         {\cf18 char} *fileContentOrigin = concatenatePaths(path, fileOrigin);\par
257         removeFile(fileOrigin);\par
258         writeTextFile(fileOrigin, {\cf22 ""});\par
259         copyFile(fileContentOrigin, fileOrigin);\par
260         ptr = lst_nextNode(ptr);\par
261         fileOrigin = lst_infoValid(ptr);\par
262         free(fileContentOrigin);\par
263     \}\par
264     free(fileOrigin);\par
265     \par
266     \}\par
267 \par
268     lst_libera(header);\par
269 \}\par
}
}
{\xe \v exibirLog\:commands.h}
{\xe \v commands.h\:exibirLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void exibirLog (int  {\i showContent})}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exibe o log do versionador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i showContent} \cell }{Flag para exibir o conte\'FAdo dos arquivos nas vers\'F5es.\cell }
{\row }
}
Obt\'E9m o n\'FAmero de vers\'F5es e exibe uma mensagem informando que o log ser\'E1 exibido. Se o flag showContent for verdadeiro, exibe o conte\'FAdo dos arquivos em cada vers\'E3o. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                 \{\par
68     {\cf18 int} numVersions = getSnapshotInfo();\par
69     {\cf19 if} (showContent) \{\par
70         printInfo({\cf22 "Exibindo conte\'FAdo dos arquivos nas vers\'F5es:"});\par
71 \par
72         {\cf20 // Exibir o conte\'FAdo dos arquivos registrados em cada vers\'E3o}\par
73         {\cf19 for} ({\cf18 int} i = 0; i < numVersions; i++) \{\par
74             {\cf17 const} {\cf18 char}* versionIdentifier = getCurrentVersionIdentifier(i);\par
75 \par
76             {\cf20 // Obter o conte\'FAdo dos arquivos versionados na vers\'E3o atual}\par
77             getVersionContent(versionIdentifier, 1);\par
78         \}\par
79     \}\par
80 \}\par
}
}
{\xe \v getLogsContent\:commands.h}
{\xe \v commands.h\:getLogsContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getLogsContent (char *  {\i file})}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o conte\'FAdo dos logs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{Arquivo dos logs.\cell }
{\row }
}
Cria uma lista e a preenche com o conte\'FAdo do arquivo dos logs. Percorre a lista e exibe o conte\'FAdo das vers\'F5es correspondentes. Libera a mem\'F3ria alocada. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 167                                \{\par
168     Lista* header = lst_cria();\par
169     lst_populateList(file, header);\par
170     ListaNo* ptr = lst_returnNodeValid(header);\par
171     {\cf19 if}(ptr == NULL)\par
172     {\cf19 return};\par
173 \par
174     {\cf18 char}* info = lst_infoValid(ptr);\par
175     {\cf19 while} (info != NULL)\par
176     \{   \par
177     {\cf20 //printInfo(concatenatePaths("getLogsContent 100", info));}\par
178         getVersionContent(info, 1);\par
179         ptr = lst_nextNode(ptr);\par
180         info = lst_infoValid(ptr);\par
181     \}\par
182     \par
183     free(info);\par
184     free(ptr);\par
185     lst_libera(header);\par
186     \par
187 \}\par
}
}
{\xe \v iniciarVersionador\:commands.h}
{\xe \v commands.h\:iniciarVersionador}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void iniciarVersionador ()}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicia o versionador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria o banco de dados e exibe uma mensagem de sucesso. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                           \{\par
17     createDatabase();\par
18     printInfo({\cf22 "Versionador iniciado com sucesso."});\par
19 \}\par
}
}
{\xe \v mostrarVersao\:commands.h}
{\xe \v commands.h\:mostrarVersao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarVersao (const char *  {\i identificador})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra o conte\'FAdo de uma vers\'E3o espec\'EDfica. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identificador} \cell }{Identificador da vers\'E3o.\cell }
{\row }
}
Obt\'E9m o conte\'FAdo dos arquivos na vers\'E3o correspondente ao identificador informado. Exibe o conte\'FAdo dos arquivos. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                               \{\par
91     getVersionContent(identificador, 1);\par
92 \}\par
}
}
{\xe \v mudarVersao\:commands.h}
{\xe \v commands.h\:mudarVersao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mudarVersao (const char *  {\i identificador})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identificador} \cell }{Identificador da vers\'E3o.\cell }
{\row }
}
Verifica se a vers\'E3o com o identificador informado existe. Se existir, muda para essa vers\'E3o. Caso contr\'E1rio, exibe uma mensagem informando que a vers\'E3o n\'E3o existe. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103                                             \{\par
104     {\cf19 if} (versionExists(identificador)) \{\par
105         changeVersion(identificador);\par
106     \} {\cf19 else} \{\par
107         printf({\cf22 "A vers\'E3o %s n\'E3o existe."}, identificador);\par
108     \}\par
109 \}\par
}
}
{\xe \v registrarSnapshot\:commands.h}
{\xe \v commands.h\:registrarSnapshot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * registrarSnapshot (const char *  {\i texto})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i texto} \cell }{Texto do snapshot. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna o identificador \'FAnico do snapshot.\par
}}Gera um identificador \'FAnico para o snapshot e o registra no banco de dados. Exibe uma mensagem de sucesso com o identificador gerado. Retorna o identificador gerado. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                            \{\par
53     {\cf18 char}* identifier = generateUniqueIdentifier();\par
54     registerSnapshot(identifier, texto);\par
55     printf({\cf22 "Snapshot registrado com sucesso. Identificador: %s"}, identifier);\par
56     {\cf19 return} identifier;\par
57 \}\par
}
}
{\xe \v restoreCurrentVersion\:commands.h}
{\xe \v commands.h\:restoreCurrentVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void restoreCurrentVersion ()}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura a vers\'E3o atual. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a pasta tempor\'E1ria de backup existe. Se n\'E3o existir, exibe uma mensagem de erro e retorna. Obt\'E9m a lista de arquivos na pasta de backup. Percorre a lista e restaura os arquivos para a vers\'E3o atual. Remove a pasta de backup. Exibe uma mensagem informando que os arquivos foram restaurados. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 282                              \{\par
283 \par
284     {\cf20 // Verificar se a pasta tempor\'E1ria de backup existe}\par
285     {\cf19 if} (!directoryExists({\cf22 ".versionador/backup"})) \{\par
286         printError({\cf22 "A pasta de backup n\'E3o existe."});\par
287         {\cf19 return};\par
288     \}\par
289 \par
290     {\cf18 char} path[] = {\cf22 ".versionador/backup"};\par
291     Lista *header = lst_cria();\par
292     searchDirectoryFiles(path, header);\par
293     ListaNo* ptr = lst_returnNodeValid(header);\par
294 \par
295     \par
296     {\cf18 char} copySec[100];\par
297     {\cf19 if}(ptr == NULL)\{\par
298     {\cf19 return};\par
299     \}{\cf19 else}\{\par
300     \par
301 \par
302     {\cf18 char}* fileOrigin = lst_infoValid(ptr);\par
303     \par
304     {\cf19 while} (fileOrigin != NULL)\par
305     \{   \par
306         strcpy(copySec, fileOrigin);\par
307         {\cf18 char} *fileBackupOrigin = concatenatePaths(path, copySec);\par
308         removeFile(copySec);\par
309         copyFile(fileBackupOrigin, copySec);\par
310         ptr = lst_nextNode(ptr);\par
311         fileOrigin = lst_infoValid(ptr);\par
312         free(fileBackupOrigin);\par
313     \}\par
314     free(fileOrigin);\par
315     \par
316     \}\par
317 \par
318     removeDirectory(path);\par
319     printInfo({\cf22 "Os arquivos foram restaurados para a vers\'E3o atual."});\par
320 \par
321     lst_libera(header);\par
322 \}\par
}
}
{\xe \v reverterVersaoAtual\:commands.h}
{\xe \v commands.h\:reverterVersaoAtual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void reverterVersaoAtual ()}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reverte a vers\'E3o atual. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura a vers\'E3o anterior da vers\'E3o atual. Exibe uma mensagem de sucesso. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                            \{\par
119     restoreCurrentVersion();\par
120     printInfo({\cf22 "Vers\'E3o atual revertida com sucesso."});\par
121 \}\par
}
}
{\xe \v saveSnapshotFilesInContent\:commands.h}
{\xe \v commands.h\:saveSnapshotFilesInContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void saveSnapshotFilesInContent (const char *  {\i identifier})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva os arquivos do snapshot no conte\'FAdo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador do snapshot.\cell }
{\row }
}
Define o caminho para o identificador do snapshot. Popula uma lista com os nomes dos arquivos do pr\'F3ximo snapshot. Percorre a lista e adiciona o conte\'FAdo dos arquivos ao snapshot atual. Remove o arquivo que lista os arquivos do pr\'F3ximo snapshot. Libera a mem\'F3ria alocada. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 134                                                         \{\par
135     setPathToSnapshotIdentifier(identifier);\par
136     Lista* header = lst_cria();\par
137     lst_populateList({\cf22 ".versionador/snapshots/next_snapshot.txt"}, header);\par
138     ListaNo* ptr = lst_returnNodeValid(header);\par
139     {\cf19 if}(ptr == NULL)\par
140     {\cf19 return};\par
141 \par
142     {\cf18 char}* info = lst_infoValid(ptr);\par
143     {\cf19 while} (info != NULL)\par
144     \{   \par
145         \par
146         addContent(identifier, info);\par
147         ptr = lst_nextNode(ptr);\par
148         info = lst_infoValid(ptr);\par
149     \}\par
150     removeFile({\cf22 ".versionador/snapshots/next_snapshot.txt"});\par
151     \par
152     free(info);\par
153     free(ptr);\par
154     lst_libera(header);\par
155 \par
156 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
commands.h\par \pard\plain 
{\tc\tcl2 \v src/commands/commands.h}
{\xe \v src/commands/commands.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef COMMANDS_H}\par
2 {\cf21 #define COMMANDS_H}\par
3 \par
4 {\cf18 void} iniciarVersionador();\par
5 {\cf18 void} adicionarArquivos({\cf18 int} argc, {\cf18 char}* argv[]);\par
6 {\cf18 char}* registrarSnapshot({\cf17 const} {\cf18 char}* texto);\par
7 {\cf18 void} exibirLog({\cf18 int} showContent);\par
8 {\cf18 void} mostrarVersao({\cf17 const} {\cf18 char}* identificador);\par
9 {\cf18 void} mudarVersao({\cf17 const} {\cf18 char}* identificador);\par
10 {\cf18 void} reverterVersaoAtual();\par
11 {\cf18 void}  saveSnapshotFilesInContent({\cf17 const} {\cf18 char}* identifier);\par
12 {\cf18 void} getLogsContent({\cf18 char}* file);\par
13 {\cf18 void} changeVersion({\cf17 const} {\cf18 char}* identifier);\par
14 {\cf18 void} restoreCurrentVersion();\par
15 \par
16 {\cf21 #endif  }{\cf20 // COMMANDS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo src/database/database.c\par \pard\plain 
{\tc\tcl2 \v src/database/database.c}
{\xe \v src/database/database.c}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../database/database.h"}\par
{\f2 #include "../utils/utils.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <dirent.h>}\par
{\f2 #include <stddef.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <sys/stat.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "../utils/lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _DEFAULT_SOURCE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createDatabase} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria o banco de dados necess\'E1rio para o versionador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addFileToSnapshot} (const char *filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um arquivo ao pr\'F3ximo snapshot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b registerSnapshot} (const char *identifier, const char *commit)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot no banco de dados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPathToSnapshotIdentifier} (const char *identifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define o caminho para o identificador do pr\'F3ximo snapshot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getSnapshotInfo} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m informa\'E7\'F5es sobre os snapshots registrados no banco de dados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getVersionContent} (const char *id, int showContent)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o conte\'FAdo de uma determinada vers\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b versionExists} (const char *identifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se uma determinada vers\'E3o existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b restoreVersionFiles} (const char *identifier, const char *backupPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura os arquivos de uma determinada vers\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b directoryExists} (const char *path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se um diret\'F3rio existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b getCurrentVersionIdentifier} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o identificador da vers\'E3o atual. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copyDirectory} (const char *sourceDir, const char *destDir)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copia um diret\'F3rio e seu conte\'FAdo para um destino espec\'EDfico. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copyFile} (const char *sourceFile, const char *destFile)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copia um arquivo de origem para um destino espec\'EDfico. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeDirectory} (const char *path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um diret\'F3rio e todo o seu conte\'FAdo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b renameDirectory} (const char *oldPath, const char *newPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renomeia um diret\'F3rio. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addContent} (const char *identifier, const char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona conte\'FAdo a um arquivo espec\'EDfico. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} {\b versions} [{\b MAX_NUM_VERSIONS}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numVersions} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v _DEFAULT_SOURCE\:database.c}
{\xe \v database.c\:_DEFAULT_SOURCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _DEFAULT_SOURCE}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v addContent\:database.c}
{\xe \v database.c\:addContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addContent (const char *  {\i identifier}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona conte\'FAdo a um arquivo espec\'EDfico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador do arquivo. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Texto a ser adicionado.\cell }
{\row }
}
Extrai o nome do arquivo do texto fornecido e, em seguida, cria o caminho completo para o arquivo dentro da pasta ".versionador/content". Em seguida, l\'EA o conte\'FAdo do arquivo fornecido e o escreve no arquivo correspondente no local especificado. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 427                                                          \{\par
428     {\cf18 char} filename[100];\par
429     {\cf18 int} i = 0;\par
430     {\cf18 int} j = 0;\par
431    \par
432    {\cf19 while} (text[i] != {\cf23 '\\0'}) \{\par
433             filename[j] = text[i]; {\cf20 // Armazena o caractere na palavra}\par
434             j++;\par
435             i++;\par
436     \}\par
437     filename[j] = {\cf23 '\\0'};\par
438     {\cf18 char}* file = concatenatePaths({\cf22 ".versionador/content"}, concatenatePaths(identifier, filename));\par
439     printInfo(filename);\par
440     writeTextFile(file, readTextFile(filename));\par
441     free(file);\par
442 \}\par
}
}
{\xe \v addFileToSnapshot\:database.c}
{\xe \v database.c\:addFileToSnapshot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addFileToSnapshot (const char *  {\i filename})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um arquivo ao pr\'F3ximo snapshot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{Nome do arquivo a ser adicionado. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                              \{\par
33      {\cf20 // Marcar o arquivo para ser adicionado ao pr\'F3ximo snapshot}\par
34     {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, {\cf22 "next_snapshot.txt"});\par
35     {\cf18 size_t} len1 = strlen({\cf22 "\\n"});\par
36     {\cf18 size_t} len2 = strlen(filename);\par
37     {\cf18 char}* combined = ({\cf18 char}*)malloc(len1 + len2 + 1);\par
38     strcpy(combined, {\cf22 "\\n"});\par
39     strcat(combined, filename);\par
40      \par
41     FILE* snapshotFile = fopen(snapshotPath, {\cf22 "w"});\par
42     {\cf19 if} (snapshotFile == NULL) \{\par
43         printError({\cf22 "Failed to open snapshot file for appending."});\par
44         free(snapshotPath);\par
45        \par
46         free(combined);\par
47         {\cf19 return};\par
48     \}\par
49 \par
50     fputs(combined, snapshotFile);\par
51     fclose(snapshotFile);\par
52     free(combined);\par
53     free(snapshotPath);\par
54 \par
55 \}\par
}
}
{\xe \v copyDirectory\:database.c}
{\xe \v database.c\:copyDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copyDirectory (const char *  {\i sourceDir}, const char *  {\i destDir})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copia um diret\'F3rio e seu conte\'FAdo para um destino espec\'EDfico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sourceDir} \cell }{Diret\'F3rio de origem. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i destDir} \cell }{Diret\'F3rio de destino. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 283                                                                \{ \par
284 \par
285     {\cf20 // Abrir o diret\'F3rio de origem}\par
286     DIR* dir = opendir(sourceDir);\par
287     {\cf19 if} (dir == NULL) \{\par
288         printf({\cf22 "Failed to open source directory.\\n"});\par
289         {\cf19 return};\par
290     \}\par
291 \par
292     {\cf20 // Ler os arquivos no diret\'F3rio de origem}\par
293     {\cf17 struct }dirent* entry;\par
294     {\cf19 while} ((entry = readdir(dir)) != NULL) \{\par
295         {\cf19 if} (strcmp(entry->d_name, {\cf22 "."}) == 0 || strcmp(entry->d_name, {\cf22 ".."}) == 0) \{\par
296             {\cf19 continue};\par
297         \}\par
298 \par
299         {\cf20 // Construir os caminhos completos para o arquivo de origem e destino}\par
300         {\cf18 char}* sourcePath = concatenatePaths(sourceDir, entry->d_name);\par
301         {\cf18 char}* destPath = concatenatePaths(destDir, entry->d_name);\par
302 \par
303         {\cf20 // Verificar se \'E9 um diret\'F3rio}\par
304         {\cf17 struct }stat st;\par
305         {\cf19 if} (stat(sourcePath, &st) == 0 && S_ISDIR(st.st_mode)) \{\par
306             {\cf20 // Se for um diret\'F3rio, chamar recursivamente a fun\'E7\'E3o copyDirectory}\par
307             copyDirectory(sourcePath, destPath);\par
308         \} {\cf19 else} \{\par
309             {\cf20 // Se for um arquivo, copiar o arquivo para o destino}\par
310             copyFile(sourcePath, destPath);\par
311         \}\par
312 \par
313         free(sourcePath);\par
314         free(destPath);\par
315     \}\par
316 \par
317     closedir(dir);\par
318 \}\par
}
}
{\xe \v copyFile\:database.c}
{\xe \v database.c\:copyFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copyFile (const char *  {\i sourceFile}, const char *  {\i destFile})}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copia um arquivo de origem para um destino espec\'EDfico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sourceFile} \cell }{Arquivo de origem. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i destFile} \cell }{Arquivo de destino. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 325                                                             \{\par
326     {\cf18 char} destino[100];\par
327     strcpy(destino, destFile);\par
328     FILE* dest = fopen(destino, {\cf22 "w"});\par
329     FILE* source = fopen(sourceFile, {\cf22 "r"});\par
330     \par
331 \par
332     {\cf19 if} (source == NULL || dest == NULL) \{\par
333         printf({\cf22 "Failed to open source or destination file.\\n"});\par
334         {\cf19 return};\par
335     \}\par
336 \par
337     fseek(source, 0, SEEK_END);\par
338     {\cf18 long} fileLength = ftell(source);\par
339     fseek(source, 0, SEEK_SET);\par
340     {\cf18 char} *buffer = ({\cf18 char}*)malloc(fileLength);\par
341 \par
342     {\cf18 size_t} bytesRead;\par
343 \par
344     {\cf19 if} ((bytesRead = fread(buffer, 1, fileLength+1, source)) > 0) \{\par
345         fwrite(buffer, 1, bytesRead, dest);\par
346     \}\par
347 \par
348     fclose(source);\par
349     fclose(dest);\par
350 \}\par
}
}
{\xe \v createDatabase\:database.c}
{\xe \v database.c\:createDatabase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createDatabase ()}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria o banco de dados necess\'E1rio para o versionador. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                       \{\par
22     createDirectory({\cf22 ".versionador"});\par
23     createDirectory({\cf22 ".versionador/content"});\par
24     createDirectory({\cf22 ".versionador/snapshots"});\par
25     writeTextFile({\cf22 ".versionador/versions.txt"}, {\cf22 ""});\par
26 \}\par
}
}
{\xe \v directoryExists\:database.c}
{\xe \v database.c\:directoryExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int directoryExists (const char *  {\i path})}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se um diret\'F3rio existe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do diret\'F3rio. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1 se o diret\'F3rio existe, 0 caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 244                                       \{\par
245     {\cf17 struct }stat st;\par
246     {\cf19 if} (stat(path, &st) == 0 && S_ISDIR(st.st_mode)) \{\par
247         {\cf19 return} 1;  {\cf20 // Diret\'F3rio existe}\par
248     \}\par
249     {\cf19 return} 0;  {\cf20 // Diret\'F3rio n\'E3o existe}\par
250 \}\par
}
}
{\xe \v getCurrentVersionIdentifier\:database.c}
{\xe \v database.c\:getCurrentVersionIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * getCurrentVersionIdentifier ()}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o identificador da vers\'E3o atual. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Identificador da vers\'E3o atual. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 255                                     \{\par
256     {\cf18 char}* versionsFile = {\cf22 ".versionador/versions.txt"};\par
257     {\cf18 char}* currentVersionIdentifier = NULL;\par
258 \par
259     {\cf20 // Ler o identificador da vers\'E3o atual do arquivo versions.txt}\par
260     {\cf18 char}* versionsText = readTextFile(versionsFile);\par
261     {\cf19 if} (versionsText != NULL) \{\par
262         {\cf20 // Obter a \'FAltima linha do arquivo}\par
263         {\cf18 char}* lastLine1 = strrchr(versionsText, {\cf23 '\\n'});\par
264         {\cf18 char}* lastLine;\par
265         strcpy(lastLine, lastLine1 + 1);\par
266         {\cf19 if} (lastLine != NULL) \{\par
267             {\cf20 // Obter o identificador da vers\'E3o}\par
268             {\cf18 size_t} length = strlen(lastLine);\par
269             currentVersionIdentifier = ({\cf18 char}*)malloc(length + 1);\par
270             strncpy(currentVersionIdentifier, lastLine, length);\par
271             currentVersionIdentifier[length] = {\cf23 '\\0'};\par
272         \}\par
273         free(versionsText);\par
274     \}\par
275 \par
276     {\cf19 return} currentVersionIdentifier;\par
277 \}\par
}
}
{\xe \v getSnapshotInfo\:database.c}
{\xe \v database.c\:getSnapshotInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int getSnapshotInfo ()}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m informa\'E7\'F5es sobre os snapshots registrados no banco de dados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
N\'FAmero total de snapshots. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                       \{\par
86     printf({\cf22 "Lista de snapshots:\\n"});\par
87 \par
88     {\cf20 // Abrir a pasta de snapshots}\par
89     DIR* snapshotsDir = opendir({\cf22 ".versionador/snapshots"});\par
90     {\cf19 if} (snapshotsDir == NULL) \{\par
91         printError({\cf22 "Failed to open snapshots directory."});\par
92         {\cf19 return} 0;\par
93     \}\par
94 \par
95     {\cf20 // Ler os arquivos na pasta de snapshots}\par
96     {\cf18 int} numVersions = 0;\par
97     {\cf17 struct }dirent* entry;\par
98     {\cf19 while} ((entry = readdir(snapshotsDir)) != NULL) \{\par
99         {\cf19 if} (entry->d_type == DT_REG) \{  {\cf20 // Verificar se \'E9 um arquivo regular}\par
100             {\cf18 char}* identifier = entry->d_name;\par
101 \par
102             {\cf20 // Construir o caminho completo para o arquivo do snapshot}\par
103             {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, identifier);\par
104 \par
105 \par
106             {\cf20 // Ler o texto do snapshot}\par
107             {\cf18 char}* snapshotText = readTextFile(snapshotPath);\par
108             {\cf19 if} (snapshotText != NULL) \{\par
109                 printf({\cf22 "Identificador: %s\\n"}, identifier);\par
110                 printf({\cf22 "Texto: %s\\n\\n"}, snapshotText);\par
111                 free(snapshotText);\par
112                 numVersions++;\par
113             \}\par
114 \par
115             free(snapshotPath);\par
116         \}\par
117     \}\par
118 \par
119     closedir(snapshotsDir);\par
120     {\cf19 return} numVersions;\par
121 \}\par
}
}
{\xe \v getVersionContent\:database.c}
{\xe \v database.c\:getVersionContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getVersionContent (const char *  {\i id}, int  {\i showContent})}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o conte\'FAdo de uma determinada vers\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{Identificador da vers\'E3o. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i showContent} \cell }{Flag para indicar se o conte\'FAdo dos arquivos deve ser exibido. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 128                                                         \{\par
129     {\cf18 char} identifier[100];\par
130     {\cf18 int} i = 0;\par
131     {\cf18 int} j = 0;\par
132    \par
133    {\cf19 while} ({\cf18 id}[i] != {\cf23 '\\0'}) \{\par
134             identifier[j] = {\cf18 id}[i]; {\cf20 // Armazena o caractere na palavra}\par
135             j++;\par
136             i++;\par
137     \}\par
138     identifier[j] = {\cf23 '\\0'};\par
139     {\cf20 // Obter o texto registrado para a vers\'E3o com o identificador especificado}\par
140     {\cf20 // Obter o conte\'FAdo dos arquivos versionados naquela vers\'E3o}\par
141     {\cf20 // Se showContent for verdadeiro, exibir o conte\'FAdo dos arquivos no console}\par
142     printInfo(identifier);\par
143     {\cf20 // Construir o caminho completo para o arquivo do snapshot}\par
144     {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, identifier);\par
145    \par
146 \par
147     {\cf20 // Ler o texto do snapshot}\par
148     {\cf18 char}* snapshotText = readTextFile(snapshotPath);\par
149 \par
150     {\cf19 if} (snapshotText != NULL) \{\par
151         printf({\cf22 "Texto registrado para a vers\'E3o %s:\\n"}, identifier);\par
152         printf({\cf22 "%s\\n\\n"}, snapshotText);\par
153         free(snapshotText);\par
154     \}\par
155 \par
156     {\cf19 if} (showContent) \{\par
157         {\cf20 // Construir o caminho completo para a pasta de conte\'FAdo}\par
158         {\cf18 char}* contentPath = concatenatePaths({\cf22 ".versionador/content"}, identifier);\par
159 \par
160         {\cf20 // Abrir a pasta de conte\'FAdo}\par
161         DIR* contentDir = opendir(contentPath);\par
162         {\cf19 if} (contentDir == NULL) \{\par
163             printError({\cf22 "Failed to open content directory."});\par
164             free(contentPath);\par
165             {\cf19 return};\par
166         \}\par
167 \par
168         printf({\cf22 "Conte\'FAdo dos arquivos versionados:\\n"});\par
169 \par
170         {\cf20 // Ler os arquivos na pasta de conte\'FAdo}\par
171         {\cf17 struct }dirent* entry;\par
172         {\cf19 while} ((entry = readdir(contentDir)) != NULL) \{\par
173             {\cf19 if} (entry->d_type == DT_REG) \{  {\cf20 // Verificar se \'E9 um arquivo regular}\par
174                 {\cf20 // Construir o caminho completo para o arquivo de conte\'FAdo}\par
175                 {\cf18 char}* filePath = concatenatePaths(contentPath, entry->d_name);\par
176 \par
177                 {\cf20 // Ler o conte\'FAdo do arquivo}\par
178                 {\cf18 char}* fileContent = readTextFile(filePath);\par
179               \par
180                 {\cf19 if} (fileContent != NULL) \{\par
181                     printf({\cf22 "Arquivo: %s\\n"}, entry->d_name);\par
182                     printf({\cf22 "Conte\'FAdo:\\n%s\\n\\n"}, fileContent);\par
183                     free(fileContent);\par
184                 \}\par
185                 free(filePath);\par
186             \}\par
187         \}\par
188 \par
189         closedir(contentDir);\par
190         free(contentPath);\par
191     \}\par
192 \par
193     free(snapshotPath);\par
194     \par
195 \}\par
}
}
{\xe \v registerSnapshot\:database.c}
{\xe \v database.c\:registerSnapshot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void registerSnapshot (const char *  {\i identifier}, const char *  {\i commit})}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot no banco de dados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador do snapshot. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i commit} \cell }{Texto do commit associado ao snapshot. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                                   \{\par
63     {\cf20 // Criar um snapshot dos arquivos marcados e registrar no banco de dados}\par
64     {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, identifier);\par
65     writeTextFile(snapshotPath, commit);\par
66    \par
67     free(snapshotPath);\par
68 \}\par
}
}
{\xe \v removeDirectory\:database.c}
{\xe \v database.c\:removeDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removeDirectory (const char *  {\i path})}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um diret\'F3rio e todo o seu conte\'FAdo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do diret\'F3rio a ser removido. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 355                                        \{\par
356     {\cf20 // Abrir o diret\'F3rio}\par
357     DIR* dir = opendir(path);\par
358     {\cf19 if} (dir == NULL) \{\par
359         printf({\cf22 "Failed to open directory.\\n"});\par
360         {\cf19 return};\par
361     \}\par
362 \par
363     {\cf20 // Ler os arquivos no diret\'F3rio}\par
364     {\cf17 struct }dirent* entry;\par
365     {\cf19 while} ((entry = readdir(dir)) != NULL) \{\par
366         {\cf19 if} (strcmp(entry->d_name, {\cf22 "."}) == 0 || strcmp(entry->d_name, {\cf22 ".."}) == 0) \{\par
367             {\cf19 continue};\par
368         \}\par
369 \par
370         {\cf20 // Construir o caminho completo para o arquivo/diret\'F3rio}\par
371         {\cf18 char}* filePath = concatenatePaths(path, entry->d_name);\par
372 \par
373         {\cf20 // Verificar se \'E9 um diret\'F3rio}\par
374         {\cf17 struct }stat st;\par
375         {\cf19 if} (stat(filePath, &st) == 0 && S_ISDIR(st.st_mode)) \{\par
376             {\cf20 // Se for um diret\'F3rio, chamar recursivamente a fun\'E7\'E3o removeDirectory}\par
377             removeDirectory(filePath);\par
378         \} {\cf19 else} \{\par
379             {\cf20 // Se for um arquivo, remover o arquivo}\par
380             {\cf19 if} (remove(filePath) != 0) \{\par
381                 printf({\cf22 "Failed to remove file: %s\\n"}, filePath);\par
382             \}\par
383         \}\par
384 \par
385         free(filePath);\par
386     \}\par
387 \par
388     closedir(dir);\par
389  \par
390     {\cf20 // Remover o diret\'F3rio}\par
391     {\cf19 if} (rmdir(path) != 0) \{\par
392         printf({\cf22 "Failed to remove directory: %s\\n"}, path);\par
393     \}\par
394 \}\par
}
}
{\xe \v renameDirectory\:database.c}
{\xe \v database.c\:renameDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void renameDirectory (const char *  {\i oldPath}, const char *  {\i newPath})}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renomeia um diret\'F3rio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oldPath} \cell }{Caminho do diret\'F3rio antigo. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newPath} \cell }{Novo caminho para o diret\'F3rio.\cell }
{\row }
}
Verifica se os caminhos s\'E3o diferentes e, em seguida, utiliza a fun\'E7\'E3o {\f2 rename}  para renomear o diret\'F3rio. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 404                                                                \{\par
405     {\cf20 // Verificar se os caminhos s\'E3o diferentes}\par
406     {\cf19 if} (strcmp(oldPath, newPath) == 0) \{\par
407         printf({\cf22 "The old and new paths are the same.\\n"});\par
408         {\cf19 return};\par
409     \}\par
410 \par
411     {\cf20 // Renomear o diret\'F3rio usando a fun\'E7\'E3o rename}\par
412     {\cf19 if} (rename(oldPath, newPath) != 0) \{\par
413         printf({\cf22 "Failed to rename directory.\\n"});\par
414         {\cf19 return};\par
415     \}\par
416 \}\par
}
}
{\xe \v restoreVersionFiles\:database.c}
{\xe \v database.c\:restoreVersionFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void restoreVersionFiles (const char *  {\i identifier}, const char *  {\i backupPath})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura os arquivos de uma determinada vers\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador da vers\'E3o. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i backupPath} \cell }{Caminho para a pasta de backup dos arquivos da vers\'E3o. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 221                                                                          \{\par
222     {\cf20 // Restaurar os arquivos da vers\'E3o com o identificador especificado}\par
223 \par
224     {\cf20 // Construir o caminho completo para a pasta de conte\'FAdo da vers\'E3o}\par
225     {\cf18 char}* versionContentPath = concatenatePaths({\cf22 ".versionador/content"}, identifier);\par
226 \par
227     {\cf20 // Remover a pasta de conte\'FAdo atual}\par
228     removeDirectory({\cf22 ".versionador/content"});\par
229 \par
230     {\cf20 // Copiar todos os arquivos da pasta de backup para a pasta de conte\'FAdo}\par
231     copyDirectory(backupPath, {\cf22 ".versionador/content"});\par
232 \par
233     {\cf20 // Renomear a pasta de conte\'FAdo para a vers\'E3o desejada}\par
234     renameDirectory({\cf22 ".versionador/content"}, versionContentPath);\par
235 \par
236     free(versionContentPath);\par
237 \}\par
}
}
{\xe \v setPathToSnapshotIdentifier\:database.c}
{\xe \v database.c\:setPathToSnapshotIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setPathToSnapshotIdentifier (const char *  {\i identifier})}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define o caminho para o identificador do pr\'F3ximo snapshot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador do pr\'F3ximo snapshot. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                                          \{\par
74     {\cf18 char}* path = concatenatePaths({\cf22 ".versionador/content"}, identifier);\par
75     writeTextFileNextLine({\cf22 ".versionador/versions.txt"}, identifier);\par
76     createDirectory(path);\par
77     printInfo({\cf22 "create version path"});\par
78     free(path);\par
79 \}\par
}
}
{\xe \v versionExists\:database.c}
{\xe \v database.c\:versionExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int versionExists (const char *  {\i identifier})}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se uma determinada vers\'E3o existe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador da vers\'E3o. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1 se a vers\'E3o existe, 0 caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 208                                           \{\par
209     {\cf20 // Verificar se a vers\'E3o com o identificador especificado existe}\par
210     {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, identifier);\par
211     {\cf18 int} exists = fileExists(snapshotPath);\par
212     free(snapshotPath);\par
213     {\cf19 return} exists;\par
214 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v numVersions\:database.c}
{\xe \v database.c\:numVersions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numVersions = 0}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v versions\:database.c}
{\xe \v database.c\:versions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Version} versions[{\b MAX_NUM_VERSIONS}]}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo src/database/database.h\par \pard\plain 
{\tc\tcl2 \v src/database/database.h}
{\xe \v src/database/database.h}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Version}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_IDENTIFIER_LENGTH}\~ 20\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_NUM_VERSIONS}\~ 100\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createDatabase} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria o banco de dados necess\'E1rio para o versionador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addFileToSnapshot} (const char *filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um arquivo ao pr\'F3ximo snapshot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b registerSnapshot} (const char *identifier, const char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot no banco de dados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getSnapshotInfo} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m informa\'E7\'F5es sobre os snapshots registrados no banco de dados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getVersionContent} (const char *identifier, int showContent)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o conte\'FAdo de uma determinada vers\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b versionExists} (const char *identifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se uma determinada vers\'E3o existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b restoreVersionFiles} (const char *identifier, const char *backupPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura os arquivos de uma determinada vers\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b directoryExists} (const char *path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se um diret\'F3rio existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b getCurrentVersionIdentifier} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o identificador da vers\'E3o atual. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copyDirectory} (const char *sourceDir, const char *destDir)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copia um diret\'F3rio e seu conte\'FAdo para um destino espec\'EDfico. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copyFile} (const char *sourceFile, const char *destFile)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copia um arquivo de origem para um destino espec\'EDfico. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeDirectory} (const char *path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um diret\'F3rio e todo o seu conte\'FAdo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b renameDirectory} (const char *oldPath, const char *newPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renomeia um diret\'F3rio. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPathToSnapshotIdentifier} (const char *identifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define o caminho para o identificador do pr\'F3ximo snapshot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addContent} (const char *identifier, const char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona conte\'FAdo a um arquivo espec\'EDfico. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} {\b versions} [{\b MAX_NUM_VERSIONS}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numVersions}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v MAX_IDENTIFIER_LENGTH\:database.h}
{\xe \v database.h\:MAX_IDENTIFIER_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_IDENTIFIER_LENGTH\~ 20}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_NUM_VERSIONS\:database.h}
{\xe \v database.h\:MAX_NUM_VERSIONS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_NUM_VERSIONS\~ 100}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v addContent\:database.h}
{\xe \v database.h\:addContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addContent (const char *  {\i identifier}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona conte\'FAdo a um arquivo espec\'EDfico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador do arquivo. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Texto a ser adicionado.\cell }
{\row }
}
Extrai o nome do arquivo do texto fornecido e, em seguida, cria o caminho completo para o arquivo dentro da pasta ".versionador/content". Em seguida, l\'EA o conte\'FAdo do arquivo fornecido e o escreve no arquivo correspondente no local especificado. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 427                                                          \{\par
428     {\cf18 char} filename[100];\par
429     {\cf18 int} i = 0;\par
430     {\cf18 int} j = 0;\par
431    \par
432    {\cf19 while} (text[i] != {\cf23 '\\0'}) \{\par
433             filename[j] = text[i]; {\cf20 // Armazena o caractere na palavra}\par
434             j++;\par
435             i++;\par
436     \}\par
437     filename[j] = {\cf23 '\\0'};\par
438     {\cf18 char}* file = concatenatePaths({\cf22 ".versionador/content"}, concatenatePaths(identifier, filename));\par
439     printInfo(filename);\par
440     writeTextFile(file, readTextFile(filename));\par
441     free(file);\par
442 \}\par
}
}
{\xe \v addFileToSnapshot\:database.h}
{\xe \v database.h\:addFileToSnapshot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addFileToSnapshot (const char *  {\i filename})}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um arquivo ao pr\'F3ximo snapshot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{Nome do arquivo a ser adicionado. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                              \{\par
33      {\cf20 // Marcar o arquivo para ser adicionado ao pr\'F3ximo snapshot}\par
34     {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, {\cf22 "next_snapshot.txt"});\par
35     {\cf18 size_t} len1 = strlen({\cf22 "\\n"});\par
36     {\cf18 size_t} len2 = strlen(filename);\par
37     {\cf18 char}* combined = ({\cf18 char}*)malloc(len1 + len2 + 1);\par
38     strcpy(combined, {\cf22 "\\n"});\par
39     strcat(combined, filename);\par
40      \par
41     FILE* snapshotFile = fopen(snapshotPath, {\cf22 "w"});\par
42     {\cf19 if} (snapshotFile == NULL) \{\par
43         printError({\cf22 "Failed to open snapshot file for appending."});\par
44         free(snapshotPath);\par
45        \par
46         free(combined);\par
47         {\cf19 return};\par
48     \}\par
49 \par
50     fputs(combined, snapshotFile);\par
51     fclose(snapshotFile);\par
52     free(combined);\par
53     free(snapshotPath);\par
54 \par
55 \}\par
}
}
{\xe \v copyDirectory\:database.h}
{\xe \v database.h\:copyDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copyDirectory (const char *  {\i sourceDir}, const char *  {\i destDir})}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copia um diret\'F3rio e seu conte\'FAdo para um destino espec\'EDfico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sourceDir} \cell }{Diret\'F3rio de origem. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i destDir} \cell }{Diret\'F3rio de destino. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 283                                                                \{ \par
284 \par
285     {\cf20 // Abrir o diret\'F3rio de origem}\par
286     DIR* dir = opendir(sourceDir);\par
287     {\cf19 if} (dir == NULL) \{\par
288         printf({\cf22 "Failed to open source directory.\\n"});\par
289         {\cf19 return};\par
290     \}\par
291 \par
292     {\cf20 // Ler os arquivos no diret\'F3rio de origem}\par
293     {\cf17 struct }dirent* entry;\par
294     {\cf19 while} ((entry = readdir(dir)) != NULL) \{\par
295         {\cf19 if} (strcmp(entry->d_name, {\cf22 "."}) == 0 || strcmp(entry->d_name, {\cf22 ".."}) == 0) \{\par
296             {\cf19 continue};\par
297         \}\par
298 \par
299         {\cf20 // Construir os caminhos completos para o arquivo de origem e destino}\par
300         {\cf18 char}* sourcePath = concatenatePaths(sourceDir, entry->d_name);\par
301         {\cf18 char}* destPath = concatenatePaths(destDir, entry->d_name);\par
302 \par
303         {\cf20 // Verificar se \'E9 um diret\'F3rio}\par
304         {\cf17 struct }stat st;\par
305         {\cf19 if} (stat(sourcePath, &st) == 0 && S_ISDIR(st.st_mode)) \{\par
306             {\cf20 // Se for um diret\'F3rio, chamar recursivamente a fun\'E7\'E3o copyDirectory}\par
307             copyDirectory(sourcePath, destPath);\par
308         \} {\cf19 else} \{\par
309             {\cf20 // Se for um arquivo, copiar o arquivo para o destino}\par
310             copyFile(sourcePath, destPath);\par
311         \}\par
312 \par
313         free(sourcePath);\par
314         free(destPath);\par
315     \}\par
316 \par
317     closedir(dir);\par
318 \}\par
}
}
{\xe \v copyFile\:database.h}
{\xe \v database.h\:copyFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copyFile (const char *  {\i sourceFile}, const char *  {\i destFile})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copia um arquivo de origem para um destino espec\'EDfico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sourceFile} \cell }{Arquivo de origem. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i destFile} \cell }{Arquivo de destino. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 325                                                             \{\par
326     {\cf18 char} destino[100];\par
327     strcpy(destino, destFile);\par
328     FILE* dest = fopen(destino, {\cf22 "w"});\par
329     FILE* source = fopen(sourceFile, {\cf22 "r"});\par
330     \par
331 \par
332     {\cf19 if} (source == NULL || dest == NULL) \{\par
333         printf({\cf22 "Failed to open source or destination file.\\n"});\par
334         {\cf19 return};\par
335     \}\par
336 \par
337     fseek(source, 0, SEEK_END);\par
338     {\cf18 long} fileLength = ftell(source);\par
339     fseek(source, 0, SEEK_SET);\par
340     {\cf18 char} *buffer = ({\cf18 char}*)malloc(fileLength);\par
341 \par
342     {\cf18 size_t} bytesRead;\par
343 \par
344     {\cf19 if} ((bytesRead = fread(buffer, 1, fileLength+1, source)) > 0) \{\par
345         fwrite(buffer, 1, bytesRead, dest);\par
346     \}\par
347 \par
348     fclose(source);\par
349     fclose(dest);\par
350 \}\par
}
}
{\xe \v createDatabase\:database.h}
{\xe \v database.h\:createDatabase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createDatabase ()}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria o banco de dados necess\'E1rio para o versionador. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                       \{\par
22     createDirectory({\cf22 ".versionador"});\par
23     createDirectory({\cf22 ".versionador/content"});\par
24     createDirectory({\cf22 ".versionador/snapshots"});\par
25     writeTextFile({\cf22 ".versionador/versions.txt"}, {\cf22 ""});\par
26 \}\par
}
}
{\xe \v directoryExists\:database.h}
{\xe \v database.h\:directoryExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int directoryExists (const char *  {\i path})}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se um diret\'F3rio existe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do diret\'F3rio. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1 se o diret\'F3rio existe, 0 caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 244                                       \{\par
245     {\cf17 struct }stat st;\par
246     {\cf19 if} (stat(path, &st) == 0 && S_ISDIR(st.st_mode)) \{\par
247         {\cf19 return} 1;  {\cf20 // Diret\'F3rio existe}\par
248     \}\par
249     {\cf19 return} 0;  {\cf20 // Diret\'F3rio n\'E3o existe}\par
250 \}\par
}
}
{\xe \v getCurrentVersionIdentifier\:database.h}
{\xe \v database.h\:getCurrentVersionIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * getCurrentVersionIdentifier ()}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o identificador da vers\'E3o atual. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Identificador da vers\'E3o atual. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 255                                     \{\par
256     {\cf18 char}* versionsFile = {\cf22 ".versionador/versions.txt"};\par
257     {\cf18 char}* currentVersionIdentifier = NULL;\par
258 \par
259     {\cf20 // Ler o identificador da vers\'E3o atual do arquivo versions.txt}\par
260     {\cf18 char}* versionsText = readTextFile(versionsFile);\par
261     {\cf19 if} (versionsText != NULL) \{\par
262         {\cf20 // Obter a \'FAltima linha do arquivo}\par
263         {\cf18 char}* lastLine1 = strrchr(versionsText, {\cf23 '\\n'});\par
264         {\cf18 char}* lastLine;\par
265         strcpy(lastLine, lastLine1 + 1);\par
266         {\cf19 if} (lastLine != NULL) \{\par
267             {\cf20 // Obter o identificador da vers\'E3o}\par
268             {\cf18 size_t} length = strlen(lastLine);\par
269             currentVersionIdentifier = ({\cf18 char}*)malloc(length + 1);\par
270             strncpy(currentVersionIdentifier, lastLine, length);\par
271             currentVersionIdentifier[length] = {\cf23 '\\0'};\par
272         \}\par
273         free(versionsText);\par
274     \}\par
275 \par
276     {\cf19 return} currentVersionIdentifier;\par
277 \}\par
}
}
{\xe \v getSnapshotInfo\:database.h}
{\xe \v database.h\:getSnapshotInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int getSnapshotInfo ()}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m informa\'E7\'F5es sobre os snapshots registrados no banco de dados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
N\'FAmero total de snapshots. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                       \{\par
86     printf({\cf22 "Lista de snapshots:\\n"});\par
87 \par
88     {\cf20 // Abrir a pasta de snapshots}\par
89     DIR* snapshotsDir = opendir({\cf22 ".versionador/snapshots"});\par
90     {\cf19 if} (snapshotsDir == NULL) \{\par
91         printError({\cf22 "Failed to open snapshots directory."});\par
92         {\cf19 return} 0;\par
93     \}\par
94 \par
95     {\cf20 // Ler os arquivos na pasta de snapshots}\par
96     {\cf18 int} numVersions = 0;\par
97     {\cf17 struct }dirent* entry;\par
98     {\cf19 while} ((entry = readdir(snapshotsDir)) != NULL) \{\par
99         {\cf19 if} (entry->d_type == DT_REG) \{  {\cf20 // Verificar se \'E9 um arquivo regular}\par
100             {\cf18 char}* identifier = entry->d_name;\par
101 \par
102             {\cf20 // Construir o caminho completo para o arquivo do snapshot}\par
103             {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, identifier);\par
104 \par
105 \par
106             {\cf20 // Ler o texto do snapshot}\par
107             {\cf18 char}* snapshotText = readTextFile(snapshotPath);\par
108             {\cf19 if} (snapshotText != NULL) \{\par
109                 printf({\cf22 "Identificador: %s\\n"}, identifier);\par
110                 printf({\cf22 "Texto: %s\\n\\n"}, snapshotText);\par
111                 free(snapshotText);\par
112                 numVersions++;\par
113             \}\par
114 \par
115             free(snapshotPath);\par
116         \}\par
117     \}\par
118 \par
119     closedir(snapshotsDir);\par
120     {\cf19 return} numVersions;\par
121 \}\par
}
}
{\xe \v getVersionContent\:database.h}
{\xe \v database.h\:getVersionContent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getVersionContent (const char *  {\i id}, int  {\i showContent})}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o conte\'FAdo de uma determinada vers\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{Identificador da vers\'E3o. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i showContent} \cell }{Flag para indicar se o conte\'FAdo dos arquivos deve ser exibido. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 128                                                         \{\par
129     {\cf18 char} identifier[100];\par
130     {\cf18 int} i = 0;\par
131     {\cf18 int} j = 0;\par
132    \par
133    {\cf19 while} ({\cf18 id}[i] != {\cf23 '\\0'}) \{\par
134             identifier[j] = {\cf18 id}[i]; {\cf20 // Armazena o caractere na palavra}\par
135             j++;\par
136             i++;\par
137     \}\par
138     identifier[j] = {\cf23 '\\0'};\par
139     {\cf20 // Obter o texto registrado para a vers\'E3o com o identificador especificado}\par
140     {\cf20 // Obter o conte\'FAdo dos arquivos versionados naquela vers\'E3o}\par
141     {\cf20 // Se showContent for verdadeiro, exibir o conte\'FAdo dos arquivos no console}\par
142     printInfo(identifier);\par
143     {\cf20 // Construir o caminho completo para o arquivo do snapshot}\par
144     {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, identifier);\par
145    \par
146 \par
147     {\cf20 // Ler o texto do snapshot}\par
148     {\cf18 char}* snapshotText = readTextFile(snapshotPath);\par
149 \par
150     {\cf19 if} (snapshotText != NULL) \{\par
151         printf({\cf22 "Texto registrado para a vers\'E3o %s:\\n"}, identifier);\par
152         printf({\cf22 "%s\\n\\n"}, snapshotText);\par
153         free(snapshotText);\par
154     \}\par
155 \par
156     {\cf19 if} (showContent) \{\par
157         {\cf20 // Construir o caminho completo para a pasta de conte\'FAdo}\par
158         {\cf18 char}* contentPath = concatenatePaths({\cf22 ".versionador/content"}, identifier);\par
159 \par
160         {\cf20 // Abrir a pasta de conte\'FAdo}\par
161         DIR* contentDir = opendir(contentPath);\par
162         {\cf19 if} (contentDir == NULL) \{\par
163             printError({\cf22 "Failed to open content directory."});\par
164             free(contentPath);\par
165             {\cf19 return};\par
166         \}\par
167 \par
168         printf({\cf22 "Conte\'FAdo dos arquivos versionados:\\n"});\par
169 \par
170         {\cf20 // Ler os arquivos na pasta de conte\'FAdo}\par
171         {\cf17 struct }dirent* entry;\par
172         {\cf19 while} ((entry = readdir(contentDir)) != NULL) \{\par
173             {\cf19 if} (entry->d_type == DT_REG) \{  {\cf20 // Verificar se \'E9 um arquivo regular}\par
174                 {\cf20 // Construir o caminho completo para o arquivo de conte\'FAdo}\par
175                 {\cf18 char}* filePath = concatenatePaths(contentPath, entry->d_name);\par
176 \par
177                 {\cf20 // Ler o conte\'FAdo do arquivo}\par
178                 {\cf18 char}* fileContent = readTextFile(filePath);\par
179               \par
180                 {\cf19 if} (fileContent != NULL) \{\par
181                     printf({\cf22 "Arquivo: %s\\n"}, entry->d_name);\par
182                     printf({\cf22 "Conte\'FAdo:\\n%s\\n\\n"}, fileContent);\par
183                     free(fileContent);\par
184                 \}\par
185                 free(filePath);\par
186             \}\par
187         \}\par
188 \par
189         closedir(contentDir);\par
190         free(contentPath);\par
191     \}\par
192 \par
193     free(snapshotPath);\par
194     \par
195 \}\par
}
}
{\xe \v registerSnapshot\:database.h}
{\xe \v database.h\:registerSnapshot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void registerSnapshot (const char *  {\i identifier}, const char *  {\i commit})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot no banco de dados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador do snapshot. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i commit} \cell }{Texto do commit associado ao snapshot. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                                   \{\par
63     {\cf20 // Criar um snapshot dos arquivos marcados e registrar no banco de dados}\par
64     {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, identifier);\par
65     writeTextFile(snapshotPath, commit);\par
66    \par
67     free(snapshotPath);\par
68 \}\par
}
}
{\xe \v removeDirectory\:database.h}
{\xe \v database.h\:removeDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removeDirectory (const char *  {\i path})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um diret\'F3rio e todo o seu conte\'FAdo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do diret\'F3rio a ser removido. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 355                                        \{\par
356     {\cf20 // Abrir o diret\'F3rio}\par
357     DIR* dir = opendir(path);\par
358     {\cf19 if} (dir == NULL) \{\par
359         printf({\cf22 "Failed to open directory.\\n"});\par
360         {\cf19 return};\par
361     \}\par
362 \par
363     {\cf20 // Ler os arquivos no diret\'F3rio}\par
364     {\cf17 struct }dirent* entry;\par
365     {\cf19 while} ((entry = readdir(dir)) != NULL) \{\par
366         {\cf19 if} (strcmp(entry->d_name, {\cf22 "."}) == 0 || strcmp(entry->d_name, {\cf22 ".."}) == 0) \{\par
367             {\cf19 continue};\par
368         \}\par
369 \par
370         {\cf20 // Construir o caminho completo para o arquivo/diret\'F3rio}\par
371         {\cf18 char}* filePath = concatenatePaths(path, entry->d_name);\par
372 \par
373         {\cf20 // Verificar se \'E9 um diret\'F3rio}\par
374         {\cf17 struct }stat st;\par
375         {\cf19 if} (stat(filePath, &st) == 0 && S_ISDIR(st.st_mode)) \{\par
376             {\cf20 // Se for um diret\'F3rio, chamar recursivamente a fun\'E7\'E3o removeDirectory}\par
377             removeDirectory(filePath);\par
378         \} {\cf19 else} \{\par
379             {\cf20 // Se for um arquivo, remover o arquivo}\par
380             {\cf19 if} (remove(filePath) != 0) \{\par
381                 printf({\cf22 "Failed to remove file: %s\\n"}, filePath);\par
382             \}\par
383         \}\par
384 \par
385         free(filePath);\par
386     \}\par
387 \par
388     closedir(dir);\par
389  \par
390     {\cf20 // Remover o diret\'F3rio}\par
391     {\cf19 if} (rmdir(path) != 0) \{\par
392         printf({\cf22 "Failed to remove directory: %s\\n"}, path);\par
393     \}\par
394 \}\par
}
}
{\xe \v renameDirectory\:database.h}
{\xe \v database.h\:renameDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void renameDirectory (const char *  {\i oldPath}, const char *  {\i newPath})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renomeia um diret\'F3rio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oldPath} \cell }{Caminho do diret\'F3rio antigo. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newPath} \cell }{Novo caminho para o diret\'F3rio.\cell }
{\row }
}
Verifica se os caminhos s\'E3o diferentes e, em seguida, utiliza a fun\'E7\'E3o {\f2 rename}  para renomear o diret\'F3rio. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 404                                                                \{\par
405     {\cf20 // Verificar se os caminhos s\'E3o diferentes}\par
406     {\cf19 if} (strcmp(oldPath, newPath) == 0) \{\par
407         printf({\cf22 "The old and new paths are the same.\\n"});\par
408         {\cf19 return};\par
409     \}\par
410 \par
411     {\cf20 // Renomear o diret\'F3rio usando a fun\'E7\'E3o rename}\par
412     {\cf19 if} (rename(oldPath, newPath) != 0) \{\par
413         printf({\cf22 "Failed to rename directory.\\n"});\par
414         {\cf19 return};\par
415     \}\par
416 \}\par
}
}
{\xe \v restoreVersionFiles\:database.h}
{\xe \v database.h\:restoreVersionFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void restoreVersionFiles (const char *  {\i identifier}, const char *  {\i backupPath})}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restaura os arquivos de uma determinada vers\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador da vers\'E3o. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i backupPath} \cell }{Caminho para a pasta de backup dos arquivos da vers\'E3o. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 221                                                                          \{\par
222     {\cf20 // Restaurar os arquivos da vers\'E3o com o identificador especificado}\par
223 \par
224     {\cf20 // Construir o caminho completo para a pasta de conte\'FAdo da vers\'E3o}\par
225     {\cf18 char}* versionContentPath = concatenatePaths({\cf22 ".versionador/content"}, identifier);\par
226 \par
227     {\cf20 // Remover a pasta de conte\'FAdo atual}\par
228     removeDirectory({\cf22 ".versionador/content"});\par
229 \par
230     {\cf20 // Copiar todos os arquivos da pasta de backup para a pasta de conte\'FAdo}\par
231     copyDirectory(backupPath, {\cf22 ".versionador/content"});\par
232 \par
233     {\cf20 // Renomear a pasta de conte\'FAdo para a vers\'E3o desejada}\par
234     renameDirectory({\cf22 ".versionador/content"}, versionContentPath);\par
235 \par
236     free(versionContentPath);\par
237 \}\par
}
}
{\xe \v setPathToSnapshotIdentifier\:database.h}
{\xe \v database.h\:setPathToSnapshotIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setPathToSnapshotIdentifier (const char *  {\i identifier})}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define o caminho para o identificador do pr\'F3ximo snapshot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador do pr\'F3ximo snapshot. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                                          \{\par
74     {\cf18 char}* path = concatenatePaths({\cf22 ".versionador/content"}, identifier);\par
75     writeTextFileNextLine({\cf22 ".versionador/versions.txt"}, identifier);\par
76     createDirectory(path);\par
77     printInfo({\cf22 "create version path"});\par
78     free(path);\par
79 \}\par
}
}
{\xe \v versionExists\:database.h}
{\xe \v database.h\:versionExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int versionExists (const char *  {\i identifier})}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se uma determinada vers\'E3o existe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identifier} \cell }{Identificador da vers\'E3o. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1 se a vers\'E3o existe, 0 caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 208                                           \{\par
209     {\cf20 // Verificar se a vers\'E3o com o identificador especificado existe}\par
210     {\cf18 char}* snapshotPath = concatenatePaths({\cf22 ".versionador/snapshots"}, identifier);\par
211     {\cf18 int} exists = fileExists(snapshotPath);\par
212     free(snapshotPath);\par
213     {\cf19 return} exists;\par
214 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v numVersions\:database.h}
{\xe \v database.h\:numVersions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numVersions{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v versions\:database.h}
{\xe \v database.h\:versions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Version} versions[{\b MAX_NUM_VERSIONS}]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
database.h\par \pard\plain 
{\tc\tcl2 \v src/database/database.h}
{\xe \v src/database/database.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef DATABASE_H}\par
2 {\cf21 #define DATABASE_H}\par
3 \par
4 {\cf21 #define MAX_IDENTIFIER_LENGTH 20}\par
5 {\cf21 #define MAX_NUM_VERSIONS 100}\par
6 \par
7 {\cf17 typedef} {\cf17 struct }\{\par
8     {\cf18 char} identifier[MAX_IDENTIFIER_LENGTH];\par
9     {\cf20 // outros campos da vers\'E3o}\par
10 \} Version;\par
11 \par
12 {\cf17 extern} Version versions[MAX_NUM_VERSIONS];\par
13 {\cf17 extern} {\cf18 int} numVersions;\par
14 \par
15 \par
16 {\cf20 // Declara\'E7\'E3o das fun\'E7\'F5es do banco de dados}\par
17 {\cf18 void} createDatabase();\par
18 {\cf18 void} addFileToSnapshot({\cf17 const} {\cf18 char}* filename);\par
19 {\cf18 void} registerSnapshot({\cf17 const} {\cf18 char}* identifier, {\cf17 const} {\cf18 char}* text);\par
20 {\cf18 int} getSnapshotInfo();\par
21 {\cf18 void} getVersionContent({\cf17 const} {\cf18 char}* identifier, {\cf18 int} showContent);\par
22 \par
23 \par
24 {\cf18 int} versionExists({\cf17 const} {\cf18 char}* identifier);\par
25 \par
26 {\cf18 void} restoreVersionFiles({\cf17 const} {\cf18 char}* identifier, {\cf17 const} {\cf18 char}* backupPath);\par
27 {\cf18 int} directoryExists({\cf17 const} {\cf18 char}* path);\par
28 {\cf18 char}* getCurrentVersionIdentifier();\par
29 {\cf18 void} copyDirectory({\cf17 const} {\cf18 char}* sourceDir, {\cf17 const} {\cf18 char}* destDir);\par
30 {\cf18 void} copyFile({\cf17 const} {\cf18 char}* sourceFile, {\cf17 const} {\cf18 char}* destFile);\par
31 {\cf18 void} removeDirectory({\cf17 const} {\cf18 char}* path);\par
32 {\cf18 void} renameDirectory({\cf17 const} {\cf18 char}* oldPath, {\cf17 const} {\cf18 char}* newPath);\par
33 {\cf18 void} setPathToSnapshotIdentifier({\cf17 const} {\cf18 char}* identifier);\par
34 {\cf18 void} addContent({\cf17 const} {\cf18 char}* identifier,{\cf17 const} {\cf18 char}* text);\par
35 \par
36 {\cf21 #endif }{\cf20 /* DATABASE_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo src/utils/lista.c\par \pard\plain 
{\tc\tcl2 \v src/utils/lista.c}
{\xe \v src/utils/lista.c}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lista.h"}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include "utils.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "../database/database.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lista_no}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura de n\'F3 da lista. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lista}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura da lista. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Lista} * {\b lst_cria} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria uma nova lista vazia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_insere} ({\b Lista} *header, char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um novo n\'F3 na lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_populateList} (char *path, {\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Preenche a lista com palavras do conte\'FAdo de um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_imprime} ({\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os elementos da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pertence} ({\b Lista} *header, char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a lista cont\'E9m um determinado elemento. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_retira} ({\b Lista} *header, char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um elemento da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lst_vazia} ({\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a lista est\'E1 vazia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_libera} ({\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Libera a mem\'F3ria ocupada pela lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaNo} * {\b lst_returnNodeValid} ({\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o primeiro n\'F3 v\'E1lido da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaNo} * {\b lst_nextNode} ({\b ListaNo} *ptr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o pr\'F3ximo n\'F3 v\'E1lido da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b lst_infoValid} ({\b ListaNo} *ptr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna a informa\'E7\'E3o v\'E1lida de um n\'F3. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v lst_cria\:lista.c}
{\xe \v lista.c\:lst_cria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Lista} * lst_cria (void )}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria uma nova lista vazia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna um ponteiro para a lista criada.\par
}}Aloca mem\'F3ria para uma nova lista e inicializa o ponteiro do primeiro n\'F3 como NULL. Retorna o ponteiro para a lista criada. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30 \{\par
31     Lista *l = (Lista*) malloc({\cf17 sizeof}(Lista));\par
32     l->primeiro = NULL;\par
33     {\cf19 return} l;\par
34 \}\par
}
}
{\xe \v lst_imprime\:lista.c}
{\xe \v lista.c\:lst_imprime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_imprime ({\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os elementos da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista a ser impressa.\cell }
{\row }
}
Percorre a lista a partir do primeiro n\'F3 e imprime a informa\'E7\'E3o de cada n\'F3. A fun\'E7\'E3o assume que a informa\'E7\'E3o dos n\'F3s \'E9 do tipo string. Imprime cada informa\'E7\'E3o seguida de uma quebra de linha. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103 \{\par
104     ListaNo *ptr = header->primeiro;\par
105     {\cf19 while}(ptr != NULL)\par
106     \{\par
107         printf({\cf22 "%s\\n"}, ptr->info);\par
108         ptr = ptr->proximo;\par
109     \}\par
110 \}\par
}
}
{\xe \v lst_infoValid\:lista.c}
{\xe \v lista.c\:lst_infoValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * lst_infoValid ({\b ListaNo} *  {\i ptr})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna a informa\'E7\'E3o v\'E1lida de um n\'F3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ptr} \cell }{Ponteiro para o n\'F3. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna a informa\'E7\'E3o do n\'F3.\par
}}Verifica se o ponteiro para o n\'F3 \'E9 nulo. Se n\'E3o for nulo, retorna a informa\'E7\'E3o do n\'F3. Caso contr\'E1rio, retorna NULL. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 253 \{\par
254         {\cf19 if}(ptr != NULL)\par
255         {\cf19 return} ptr->info;\par
256         \par
257         {\cf19 return} NULL;\par
258          \par
259 \}\par
}
}
{\xe \v lst_insere\:lista.c}
{\xe \v lista.c\:lst_insere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_insere ({\b Lista} *  {\i header}, char *  {\i text})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um novo n\'F3 na lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista onde o n\'F3 ser\'E1 inserido. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Informa\'E7\'E3o a ser armazenada no novo n\'F3.\cell }
{\row }
}
Cria um novo n\'F3 e atribui a informa\'E7\'E3o fornecida. O novo n\'F3 \'E9 inserido no in\'EDcio da lista. O pr\'F3ximo ponteiro do novo n\'F3 aponta para o n\'F3 que era o primeiro na lista. O ponteiro do primeiro n\'F3 da lista \'E9 atualizado para o novo n\'F3. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48 \{\par
49     ListaNo *novo = (ListaNo*) malloc({\cf17 sizeof}(ListaNo));\par
50     novo->info = text;\par
51     novo->proximo = header->primeiro;\par
52     header->primeiro = novo;\par
53 \}\par
}
}
{\xe \v lst_libera\:lista.c}
{\xe \v lista.c\:lst_libera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_libera ({\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Libera a mem\'F3ria ocupada pela lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista a ser liberada.\cell }
{\row }
}
Percorre a lista a partir do primeiro n\'F3 e libera a mem\'F3ria ocupada por cada n\'F3. Libera a mem\'F3ria alocada para a estrutura da lista. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 192 \{\par
193     ListaNo *p = header->primeiro;\par
194     {\cf19 while} (p != NULL)\par
195     \{\par
196         ListaNo *t  = p->proximo;\par
197         free(p);\par
198         p = t;\par
199     \}\par
200 \par
201     free(header);\par
202 \}\par
}
}
{\xe \v lst_nextNode\:lista.c}
{\xe \v lista.c\:lst_nextNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaNo} * lst_nextNode ({\b ListaNo} *  {\i ptr})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o pr\'F3ximo n\'F3 v\'E1lido da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ptr} \cell }{Ponteiro para o n\'F3 atual. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna um ponteiro para o pr\'F3ximo n\'F3 v\'E1lido da lista.\par
}}Verifica se o ponteiro para o n\'F3 atual \'E9 nulo. Se n\'E3o for nulo, retorna o ponteiro para o pr\'F3ximo n\'F3. Caso contr\'E1rio, imprime uma mensagem de erro e retorna NULL. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 233                                    \{\par
234     {\cf19 if}(ptr != NULL)\par
235     {\cf19 return} ptr->proximo;\par
236 \par
237     printError({\cf22 "no invalido"});\par
238 \par
239     {\cf19 return} NULL;\par
240 \}\par
}
}
{\xe \v lst_populateList\:lista.c}
{\xe \v lista.c\:lst_populateList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_populateList (char *  {\i path}, {\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Preenche a lista com palavras do conte\'FAdo de um arquivo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do arquivo a ser lido. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista onde as palavras ser\'E3o armazenadas.\cell }
{\row }
}
L\'EA o conte\'FAdo do arquivo especificado. Percorre o conte\'FAdo caractere por caractere e armazena palavras separadas por quebras de linha. Para cada palavra encontrada, cria um novo n\'F3 na lista e atribui a palavra como informa\'E7\'E3o do n\'F3. O novo n\'F3 \'E9 inserido no in\'EDcio da lista. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                                                 \{\par
67     {\cf18 char}* content = readTextFile(path);\par
68 \par
69 \par
70     {\cf18 int} i = 0;\par
71     {\cf18 char} palavra[100]; {\cf20 // Tamanho m\'E1ximo da palavra definido como 100}\par
72     {\cf18 int} j = 0;\par
73     \par
74     {\cf19 while} (content[i] != {\cf23 '\\0'}) \{\par
75             palavra[j] = content[i]; {\cf20 // Armazena o caractere na palavra}\par
76             j++;\par
77         i++;\par
78         {\cf19 if} (content[i] == {\cf23 '\\n'} || content[i] == {\cf23 '\\0'}) \{\par
79             palavra[j] = {\cf23 '\\0'}; {\cf20 // Adiciona o caractere nulo para indicar o fim da palavra}\par
80             printInfo(palavra);\par
81             ListaNo *novo = (ListaNo*) malloc({\cf17 sizeof}(ListaNo));\par
82             {\cf18 size_t} len1 = strlen(palavra);\par
83             novo->info = ({\cf18 char}*)malloc(len1+1);\par
84             strcpy(novo->info, palavra+1);\par
85             novo->proximo = header->primeiro;\par
86             header->primeiro = novo; {\cf20 // Imprime a palavra completa}\par
87             j = 0; {\cf20 // Reseta o \'EDndice para a pr\'F3xima palavra}\par
88         \} \par
89     \}\par
90     \par
91 \}\par
}
}
{\xe \v lst_retira\:lista.c}
{\xe \v lista.c\:lst_retira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_retira ({\b Lista} *  {\i header}, char *  {\i text})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um elemento da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista da qual o elemento ser\'E1 removido. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Elemento a ser removido da lista.\cell }
{\row }
}
Percorre a lista a partir do primeiro n\'F3 e procura o n\'F3 com a informa\'E7\'E3o igual ao elemento fornecido. Se o n\'F3 for encontrado, remove-o da lista. Atualiza os ponteiros para manter a integridade da lista. Libera a mem\'F3ria alocada para o n\'F3 removido. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 148 \{\par
149     ListaNo *ant = NULL;\par
150     ListaNo *p = header->primeiro;\par
151 \par
152     {\cf19 while} (p != NULL && p->info != text)\par
153     \{\par
154         ant = p;\par
155         p = p->proximo;\par
156     \}\par
157 \par
158     {\cf19 if} (p != NULL) \{\par
159         {\cf19 if} (ant == NULL)\par
160             header->primeiro = p->proximo;\par
161         {\cf19 else} \par
162             ant->proximo = p->proximo;\par
163 \par
164         free(p);\par
165     \}\par
166 \}\par
}
}
{\xe \v lst_returnNodeValid\:lista.c}
{\xe \v lista.c\:lst_returnNodeValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaNo} * lst_returnNodeValid ({\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o primeiro n\'F3 v\'E1lido da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna um ponteiro para o primeiro n\'F3 v\'E1lido da lista.\par
}}Verifica se o ponteiro para o primeiro n\'F3 da lista \'E9 nulo. Se n\'E3o for nulo, retorna o ponteiro para o primeiro n\'F3. Caso contr\'E1rio, imprime uma mensagem de erro e retorna NULL. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 214                                            \{\par
215     {\cf19 if}(header->primeiro != NULL)\par
216     {\cf19 return} header->primeiro;\par
217     \par
218     printError({\cf22 "lista vazia"});\par
219 \par
220     {\cf19 return} NULL;\par
221 \}\par
}
}
{\xe \v lst_vazia\:lista.c}
{\xe \v lista.c\:lst_vazia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lst_vazia ({\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a lista est\'E1 vazia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista a ser verificada. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna 1 se a lista est\'E1 vazia, 0 caso contr\'E1rio.\par
}}Verifica se o ponteiro para o primeiro n\'F3 da lista \'E9 nulo. Se for nulo, a lista est\'E1 vazia e a fun\'E7\'E3o retorna 1. Caso contr\'E1rio, a lista n\'E3o est\'E1 vazia e a fun\'E7\'E3o retorna 0. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 179 \{\par
180     {\cf19 return} (header->primeiro == NULL);\par
181 \}\par
}
}
{\xe \v pertence\:lista.c}
{\xe \v lista.c\:pertence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pertence ({\b Lista} *  {\i header}, char *  {\i text})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a lista cont\'E9m um determinado elemento. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista a ser verificada. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Elemento a ser procurado na lista. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna 1 se o elemento pertence \'E0 lista, 0 caso contr\'E1rio.\par
}}Percorre a lista a partir do primeiro n\'F3 e compara a informa\'E7\'E3o de cada n\'F3 com o elemento fornecido. A fun\'E7\'E3o assume que a informa\'E7\'E3o dos n\'F3s \'E9 do tipo string. Se o elemento for encontrado, retorna 1; caso contr\'E1rio, retorna 0. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 124 \{\par
125     ListaNo *ptr = header->primeiro;\par
126     {\cf19 while}(ptr != NULL)\par
127     \{\par
128         {\cf19 if} (ptr->info == text)\par
129             {\cf19 return} 1;\par
130         ptr = ptr->proximo;\par
131     \}\par
132 \par
133     {\cf19 return} 0;\par
134 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo src/utils/lista.h\par \pard\plain 
{\tc\tcl2 \v src/utils/lista.h}
{\xe \v src/utils/lista.h}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b lista_no} {\b ListaNo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b lista} {\b Lista}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Lista} * {\b lst_cria} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria uma nova lista vazia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_insere} ({\b Lista} *header, char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um novo n\'F3 na lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_imprime} ({\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os elementos da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pertence} ({\b Lista} *header, char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a lista cont\'E9m um determinado elemento. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_retira} ({\b Lista} *header, char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um elemento da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lst_vazia} ({\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a lista est\'E1 vazia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_libera} ({\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Libera a mem\'F3ria ocupada pela lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lst_populateList} (char *path, {\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Preenche a lista com palavras do conte\'FAdo de um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaNo} * {\b lst_returnNodeValid} ({\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o primeiro n\'F3 v\'E1lido da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaNo} * {\b lst_nextNode} ({\b ListaNo} *ptr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o pr\'F3ximo n\'F3 v\'E1lido da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b lst_infoValid} ({\b ListaNo} *ptr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna a informa\'E7\'E3o v\'E1lida de um n\'F3. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v Lista\:lista.h}
{\xe \v lista.h\:Lista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b lista} {\b Lista}}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ListaNo\:lista.h}
{\xe \v lista.h\:ListaNo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b lista_no} {\b ListaNo}}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v lst_cria\:lista.h}
{\xe \v lista.h\:lst_cria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Lista} * lst_cria (void )}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria uma nova lista vazia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna um ponteiro para a lista criada.\par
}}Aloca mem\'F3ria para uma nova lista e inicializa o ponteiro do primeiro n\'F3 como NULL. Retorna o ponteiro para a lista criada. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30 \{\par
31     Lista *l = (Lista*) malloc({\cf17 sizeof}(Lista));\par
32     l->primeiro = NULL;\par
33     {\cf19 return} l;\par
34 \}\par
}
}
{\xe \v lst_imprime\:lista.h}
{\xe \v lista.h\:lst_imprime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_imprime ({\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os elementos da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista a ser impressa.\cell }
{\row }
}
Percorre a lista a partir do primeiro n\'F3 e imprime a informa\'E7\'E3o de cada n\'F3. A fun\'E7\'E3o assume que a informa\'E7\'E3o dos n\'F3s \'E9 do tipo string. Imprime cada informa\'E7\'E3o seguida de uma quebra de linha. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103 \{\par
104     ListaNo *ptr = header->primeiro;\par
105     {\cf19 while}(ptr != NULL)\par
106     \{\par
107         printf({\cf22 "%s\\n"}, ptr->info);\par
108         ptr = ptr->proximo;\par
109     \}\par
110 \}\par
}
}
{\xe \v lst_infoValid\:lista.h}
{\xe \v lista.h\:lst_infoValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * lst_infoValid ({\b ListaNo} *  {\i ptr})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna a informa\'E7\'E3o v\'E1lida de um n\'F3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ptr} \cell }{Ponteiro para o n\'F3. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna a informa\'E7\'E3o do n\'F3.\par
}}Verifica se o ponteiro para o n\'F3 \'E9 nulo. Se n\'E3o for nulo, retorna a informa\'E7\'E3o do n\'F3. Caso contr\'E1rio, retorna NULL. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 253 \{\par
254         {\cf19 if}(ptr != NULL)\par
255         {\cf19 return} ptr->info;\par
256         \par
257         {\cf19 return} NULL;\par
258          \par
259 \}\par
}
}
{\xe \v lst_insere\:lista.h}
{\xe \v lista.h\:lst_insere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_insere ({\b Lista} *  {\i header}, char *  {\i text})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um novo n\'F3 na lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista onde o n\'F3 ser\'E1 inserido. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Informa\'E7\'E3o a ser armazenada no novo n\'F3.\cell }
{\row }
}
Cria um novo n\'F3 e atribui a informa\'E7\'E3o fornecida. O novo n\'F3 \'E9 inserido no in\'EDcio da lista. O pr\'F3ximo ponteiro do novo n\'F3 aponta para o n\'F3 que era o primeiro na lista. O ponteiro do primeiro n\'F3 da lista \'E9 atualizado para o novo n\'F3. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48 \{\par
49     ListaNo *novo = (ListaNo*) malloc({\cf17 sizeof}(ListaNo));\par
50     novo->info = text;\par
51     novo->proximo = header->primeiro;\par
52     header->primeiro = novo;\par
53 \}\par
}
}
{\xe \v lst_libera\:lista.h}
{\xe \v lista.h\:lst_libera}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_libera ({\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Libera a mem\'F3ria ocupada pela lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista a ser liberada.\cell }
{\row }
}
Percorre a lista a partir do primeiro n\'F3 e libera a mem\'F3ria ocupada por cada n\'F3. Libera a mem\'F3ria alocada para a estrutura da lista. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 192 \{\par
193     ListaNo *p = header->primeiro;\par
194     {\cf19 while} (p != NULL)\par
195     \{\par
196         ListaNo *t  = p->proximo;\par
197         free(p);\par
198         p = t;\par
199     \}\par
200 \par
201     free(header);\par
202 \}\par
}
}
{\xe \v lst_nextNode\:lista.h}
{\xe \v lista.h\:lst_nextNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaNo} * lst_nextNode ({\b ListaNo} *  {\i ptr})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o pr\'F3ximo n\'F3 v\'E1lido da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ptr} \cell }{Ponteiro para o n\'F3 atual. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna um ponteiro para o pr\'F3ximo n\'F3 v\'E1lido da lista.\par
}}Verifica se o ponteiro para o n\'F3 atual \'E9 nulo. Se n\'E3o for nulo, retorna o ponteiro para o pr\'F3ximo n\'F3. Caso contr\'E1rio, imprime uma mensagem de erro e retorna NULL. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 233                                    \{\par
234     {\cf19 if}(ptr != NULL)\par
235     {\cf19 return} ptr->proximo;\par
236 \par
237     printError({\cf22 "no invalido"});\par
238 \par
239     {\cf19 return} NULL;\par
240 \}\par
}
}
{\xe \v lst_populateList\:lista.h}
{\xe \v lista.h\:lst_populateList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_populateList (char *  {\i path}, {\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Preenche a lista com palavras do conte\'FAdo de um arquivo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do arquivo a ser lido. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista onde as palavras ser\'E3o armazenadas.\cell }
{\row }
}
L\'EA o conte\'FAdo do arquivo especificado. Percorre o conte\'FAdo caractere por caractere e armazena palavras separadas por quebras de linha. Para cada palavra encontrada, cria um novo n\'F3 na lista e atribui a palavra como informa\'E7\'E3o do n\'F3. O novo n\'F3 \'E9 inserido no in\'EDcio da lista. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                                                 \{\par
67     {\cf18 char}* content = readTextFile(path);\par
68 \par
69 \par
70     {\cf18 int} i = 0;\par
71     {\cf18 char} palavra[100]; {\cf20 // Tamanho m\'E1ximo da palavra definido como 100}\par
72     {\cf18 int} j = 0;\par
73     \par
74     {\cf19 while} (content[i] != {\cf23 '\\0'}) \{\par
75             palavra[j] = content[i]; {\cf20 // Armazena o caractere na palavra}\par
76             j++;\par
77         i++;\par
78         {\cf19 if} (content[i] == {\cf23 '\\n'} || content[i] == {\cf23 '\\0'}) \{\par
79             palavra[j] = {\cf23 '\\0'}; {\cf20 // Adiciona o caractere nulo para indicar o fim da palavra}\par
80             printInfo(palavra);\par
81             ListaNo *novo = (ListaNo*) malloc({\cf17 sizeof}(ListaNo));\par
82             {\cf18 size_t} len1 = strlen(palavra);\par
83             novo->info = ({\cf18 char}*)malloc(len1+1);\par
84             strcpy(novo->info, palavra+1);\par
85             novo->proximo = header->primeiro;\par
86             header->primeiro = novo; {\cf20 // Imprime a palavra completa}\par
87             j = 0; {\cf20 // Reseta o \'EDndice para a pr\'F3xima palavra}\par
88         \} \par
89     \}\par
90     \par
91 \}\par
}
}
{\xe \v lst_retira\:lista.h}
{\xe \v lista.h\:lst_retira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lst_retira ({\b Lista} *  {\i header}, char *  {\i text})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um elemento da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista da qual o elemento ser\'E1 removido. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Elemento a ser removido da lista.\cell }
{\row }
}
Percorre a lista a partir do primeiro n\'F3 e procura o n\'F3 com a informa\'E7\'E3o igual ao elemento fornecido. Se o n\'F3 for encontrado, remove-o da lista. Atualiza os ponteiros para manter a integridade da lista. Libera a mem\'F3ria alocada para o n\'F3 removido. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 148 \{\par
149     ListaNo *ant = NULL;\par
150     ListaNo *p = header->primeiro;\par
151 \par
152     {\cf19 while} (p != NULL && p->info != text)\par
153     \{\par
154         ant = p;\par
155         p = p->proximo;\par
156     \}\par
157 \par
158     {\cf19 if} (p != NULL) \{\par
159         {\cf19 if} (ant == NULL)\par
160             header->primeiro = p->proximo;\par
161         {\cf19 else} \par
162             ant->proximo = p->proximo;\par
163 \par
164         free(p);\par
165     \}\par
166 \}\par
}
}
{\xe \v lst_returnNodeValid\:lista.h}
{\xe \v lista.h\:lst_returnNodeValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaNo} * lst_returnNodeValid ({\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o primeiro n\'F3 v\'E1lido da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna um ponteiro para o primeiro n\'F3 v\'E1lido da lista.\par
}}Verifica se o ponteiro para o primeiro n\'F3 da lista \'E9 nulo. Se n\'E3o for nulo, retorna o ponteiro para o primeiro n\'F3. Caso contr\'E1rio, imprime uma mensagem de erro e retorna NULL. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 214                                            \{\par
215     {\cf19 if}(header->primeiro != NULL)\par
216     {\cf19 return} header->primeiro;\par
217     \par
218     printError({\cf22 "lista vazia"});\par
219 \par
220     {\cf19 return} NULL;\par
221 \}\par
}
}
{\xe \v lst_vazia\:lista.h}
{\xe \v lista.h\:lst_vazia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lst_vazia ({\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a lista est\'E1 vazia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista a ser verificada. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna 1 se a lista est\'E1 vazia, 0 caso contr\'E1rio.\par
}}Verifica se o ponteiro para o primeiro n\'F3 da lista \'E9 nulo. Se for nulo, a lista est\'E1 vazia e a fun\'E7\'E3o retorna 1. Caso contr\'E1rio, a lista n\'E3o est\'E1 vazia e a fun\'E7\'E3o retorna 0. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 179 \{\par
180     {\cf19 return} (header->primeiro == NULL);\par
181 \}\par
}
}
{\xe \v pertence\:lista.h}
{\xe \v lista.h\:pertence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pertence ({\b Lista} *  {\i header}, char *  {\i text})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a lista cont\'E9m um determinado elemento. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista a ser verificada. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Elemento a ser procurado na lista. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna 1 se o elemento pertence \'E0 lista, 0 caso contr\'E1rio.\par
}}Percorre a lista a partir do primeiro n\'F3 e compara a informa\'E7\'E3o de cada n\'F3 com o elemento fornecido. A fun\'E7\'E3o assume que a informa\'E7\'E3o dos n\'F3s \'E9 do tipo string. Se o elemento for encontrado, retorna 1; caso contr\'E1rio, retorna 0. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 124 \{\par
125     ListaNo *ptr = header->primeiro;\par
126     {\cf19 while}(ptr != NULL)\par
127     \{\par
128         {\cf19 if} (ptr->info == text)\par
129             {\cf19 return} 1;\par
130         ptr = ptr->proximo;\par
131     \}\par
132 \par
133     {\cf19 return} 0;\par
134 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lista.h\par \pard\plain 
{\tc\tcl2 \v src/utils/lista.h}
{\xe \v src/utils/lista.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef LISTA_H_}\par
2 {\cf21 #define LISTA_H_}\par
3 \par
4 {\cf17 typedef} {\cf17 struct }lista_no ListaNo;\par
5 {\cf17 typedef} {\cf17 struct }lista Lista;\par
6 \par
7 {\cf20 // Interface das fun\'E7\'F5es}\par
8 Lista* lst_cria({\cf18 void});\par
9 {\cf18 void} lst_insere(Lista *header, {\cf18 char}* text);\par
10 {\cf18 void} lst_imprime(Lista *header);\par
11 {\cf18 int} pertence (Lista *header, {\cf18 char}* text);\par
12 {\cf18 void} lst_retira(Lista *header, {\cf18 char}* text);\par
13 {\cf18 int} lst_vazia(Lista *header);\par
14 {\cf18 void} lst_libera(Lista *header);\par
15 {\cf18 void} lst_populateList({\cf18 char}* path, Lista* header);\par
16 ListaNo* lst_returnNodeValid(Lista *header);\par
17 ListaNo* lst_nextNode(ListaNo *ptr);\par
18 {\cf18 char}* lst_infoValid(ListaNo *ptr);\par
19 \par
20 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo src/utils/util.c\par \pard\plain 
{\tc\tcl2 \v src/utils/util.c}
{\xe \v src/utils/util.c}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "utils.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <dirent.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <sys/stat.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "../database/database.h"}\par
{\f2 #include <unistd.h>}\par
{\f2 #include "lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _DEFAULT_SOURCE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printError} (const char *message)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime uma mensagem de erro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printInfo} (const char *message)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime uma mensagem de informa\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createDirectory} (const char *path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria um diret\'F3rio. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b contLines} (char *path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conta o n\'FAmero de linhas em um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b concatenatePaths} (const char *path1, const char *path2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatena dois caminhos em uma \'FAnica string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b readTextFile} (const char *name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
L\'EA o conte\'FAdo de um arquivo de texto. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeTextFileNextLine} (const char *name, const char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escreve o conte\'FAdo em um arquivo de texto na pr\'F3xima linha. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeTextFile} (const char *filename, const char *content)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escreve o conte\'FAdo em um arquivo de texto. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fileExists} (const char *filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se um arquivo existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b generateUniqueIdentifier} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gera um identificador \'FAnico. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b getVersionIdentifier} (int versionIndex)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o identificador da vers\'E3o correspondente ao \'EDndice fornecido. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeFile} (char *file)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b searchDirectoryFiles} (char *path, {\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pesquisa os arquivos em um diret\'F3rio. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v _DEFAULT_SOURCE\:util.c}
{\xe \v util.c\:_DEFAULT_SOURCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _DEFAULT_SOURCE}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v concatenatePaths\:util.c}
{\xe \v util.c\:concatenatePaths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * concatenatePaths (const char *  {\i path1}, const char *  {\i path2})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatena dois caminhos em uma \'FAnica string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path1} \cell }{Primeiro caminho. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path2} \cell }{Segundo caminho. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O caminho combinado resultante da concatena\'E7\'E3o.\par
}}Calcula o tamanho necess\'E1rio para a nova string combinada, aloca mem\'F3ria suficiente e concatena os dois caminhos fornecidos, adicionando uma barra "/" entre eles. Retorna o caminho combinado resultante. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95                                                              \{\par
96     {\cf18 size_t} len1 = strlen(path1);\par
97     {\cf18 size_t} len2 = strlen(path2);\par
98     {\cf18 char}* combined = ({\cf18 char}*)malloc(len1 + len2 + 2);\par
99     strcpy(combined, path1);\par
100     strcat(combined, {\cf22 "/"});\par
101     strcat(combined, path2);\par
102     {\cf19 return} combined;\par
103 \}\par
}
}
{\xe \v contLines\:util.c}
{\xe \v util.c\:contLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int contLines (char *  {\i path})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conta o n\'FAmero de linhas em um arquivo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do arquivo a ser contado. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O n\'FAmero de linhas no arquivo.\par
}}Abre o arquivo especificado em modo leitura e conta o n\'FAmero de quebras de linha para determinar o n\'FAmero de linhas no arquivo. Retorna o total de linhas encontradas. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                          \{\par
59      {\cf20 // nome e local do arquivo que ser\'E1 aberto para}\par
60   {\cf20 // obtermos a quantidade de linhas}\par
61   FILE *arquivo = fopen(path, {\cf22 "r"});\par
62   \par
63   \par
64   {\cf18 int} quant_linhas = 0;\par
65   {\cf18 int} caractere, existe_linhas = 0;\par
66    \par
67   {\cf19 while}((caractere = fgetc(arquivo)) != EOF)\{\par
68     existe_linhas = 1; {\cf20 // h\'E1 conte\'FAdo no arquivo}\par
69      \par
70     {\cf19 if}(caractere == {\cf23 '\\n'})\{ {\cf20 // \'E9 uma quebra de linha?}\par
71       {\cf20 // vamos incrementar a quantidade de linhas}\par
72       quant_linhas++;             \par
73     \} \par
74   \}\par
75  \par
76   {\cf20 // se n\'E3o houver uma quebra de linha na \'FAltima linha}\par
77   {\cf20 // a contagem ser\'E1 sempre um a menos. Assim, \'E9 melhor}\par
78   {\cf20 // incrementar quant_linhas mais uma vez}\par
79   {\cf19 if}(existe_linhas)\par
80     quant_linhas++;\par
81 \par
82     {\cf19 return} quant_linhas;\par
83 \}\par
}
}
{\xe \v createDirectory\:util.c}
{\xe \v util.c\:createDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createDirectory (const char *  {\i path})}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria um diret\'F3rio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do diret\'F3rio a ser criado.\cell }
{\row }
}
Cria um diret\'F3rio utilizando a fun\'E7\'E3o {\f2 mkdir}  com as permiss\'F5es 0777. Se a cria\'E7\'E3o falhar, imprime uma mensagem de erro e encerra o programa. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                        \{\par
43     {\cf18 int} result = mkdir(path, 0777);\par
44     {\cf19 if} (result != 0) \{\par
45         printError({\cf22 "Failed to create directory."});\par
46         exit(1);\par
47     \}\par
48 \}\par
}
}
{\xe \v fileExists\:util.c}
{\xe \v util.c\:fileExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int fileExists (const char *  {\i filename})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se um arquivo existe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{Nome do arquivo a ser verificado. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna 1 se o arquivo existe, caso contr\'E1rio retorna 0.\par
}}Verifica se um arquivo com o nome especificado existe. Tenta abrir o arquivo em modo leitura. Se o arquivo for aberto com sucesso, fecha-o e retorna 1 indicando que o arquivo existe. Caso contr\'E1rio, retorna 0 indicando que o arquivo n\'E3o existe. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 223                                      \{\par
224     FILE* file = fopen(filename, {\cf22 "r"});\par
225     {\cf19 if} (file != NULL) \{\par
226         fclose(file);\par
227         {\cf19 return} 1;\par
228     \}\par
229     {\cf19 return} 0;\par
230 \}\par
}
}
{\xe \v generateUniqueIdentifier\:util.c}
{\xe \v util.c\:generateUniqueIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * generateUniqueIdentifier ()}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gera um identificador \'FAnico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna o identificador \'FAnico gerado.\par
}}Gera um identificador \'FAnico baseado na data e hora atual. Aloca mem\'F3ria suficiente para armazenar o identificador. Obt\'E9m a data e hora atual e formata a string do identificador no formato "%Y%m%d%H%M%S". Retorna o identificador \'FAnico gerado. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 242                                  \{\par
243     {\cf18 char}* identifier = ({\cf18 char}*)malloc((MAX_IDENTIFIER_LENGTH + 1) * {\cf17 sizeof}(char));\par
244 \par
245     {\cf20 // Gerar um identificador \'FAnico baseado na data e hora atual}\par
246     time_t currentTime = time(NULL);\par
247     {\cf17 struct }tm* timeInfo = localtime(&currentTime);\par
248     strftime(identifier, MAX_IDENTIFIER_LENGTH, {\cf22 "%Y%m%d%H%M%S"}, timeInfo);\par
249 \par
250     {\cf19 return} identifier;\par
251 \}\par
}
}
{\xe \v getVersionIdentifier\:util.c}
{\xe \v util.c\:getVersionIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * getVersionIdentifier (int  {\i versionIndex})}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m o identificador da vers\'E3o correspondente ao \'EDndice fornecido. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i versionIndex} \cell }{O \'EDndice da vers\'E3o. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna o identificador da vers\'E3o correspondente, ou NULL se o \'EDndice for inv\'E1lido.\par
}}Verifica se o \'EDndice da vers\'E3o fornecido \'E9 v\'E1lido. Se o \'EDndice estiver fora dos limites do array de vers\'F5es, retorna NULL. Caso contr\'E1rio, aloca mem\'F3ria para armazenar o identificador da vers\'E3o. Copia o identificador da vers\'E3o correspondente para a vari\'E1vel "identifier". Retorna o identificador da vers\'E3o. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 265                                                    \{\par
266     {\cf20 // Verificar se o \'EDndice da vers\'E3o \'E9 v\'E1lido}\par
267     {\cf19 if} (versionIndex < 0 || versionIndex >= numVersions) \{\par
268         {\cf19 return} NULL;\par
269     \}\par
270     \par
271     {\cf20 // Obter o identificador da vers\'E3o correspondente}\par
272     {\cf18 char}* identifier = ({\cf18 char}*)malloc({\cf17 sizeof}({\cf18 char}) * MAX_IDENTIFIER_LENGTH);\par
273     {\cf19 if} (identifier == NULL) \{\par
274         {\cf19 return} NULL;\par
275     \}\par
276     \par
277     {\cf20 // Copiar o identificador da vers\'E3o para a vari\'E1vel "identifier"}\par
278     strncpy(identifier, versions[versionIndex].identifier, MAX_IDENTIFIER_LENGTH);\par
279     \par
280     {\cf19 return} identifier;\par
281 \}\par
}
}
{\xe \v printError\:util.c}
{\xe \v util.c\:printError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printError (const char *  {\i message})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime uma mensagem de erro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{Mensagem de erro a ser exibida.\cell }
{\row }
}
Imprime uma mensagem de erro formatada, precedida pela tag [ERROR]. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                      \{\par
22     printf({\cf22 "[ERROR] %s\\n"}, message);\par
23 \}\par
}
}
{\xe \v printInfo\:util.c}
{\xe \v util.c\:printInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printInfo (const char *  {\i message})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime uma mensagem de informa\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{Mensagem de informa\'E7\'E3o a ser exibida.\cell }
{\row }
}
Imprime uma mensagem de informa\'E7\'E3o formatada, precedida pela tag [INFO]. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                     \{\par
32     printf({\cf22 "[INFO] %s\\n"}, message);\par
33 \}\par
}
}
{\xe \v readTextFile\:util.c}
{\xe \v util.c\:readTextFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * readTextFile (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
L\'EA o conte\'FAdo de um arquivo de texto. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{Nome do arquivo a ser lido. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O conte\'FAdo do arquivo lido como uma string.\par
}}L\'EA o conte\'FAdo de um arquivo de texto com o nome especificado. Primeiro, armazena o nome do arquivo em uma vari\'E1vel local. Em seguida, tenta abrir o arquivo em modo leitura. Se a abertura falhar, imprime uma mensagem de erro e retorna NULL. Calcula o tamanho do arquivo, aloca mem\'F3ria suficiente e l\'EA o conte\'FAdo do arquivo para a string. Adiciona um caractere nulo ao final da string e fecha o arquivo. Retorna o conte\'FAdo do arquivo como uma string. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                                      \{\par
119     {\cf18 char} filename[100];\par
120     {\cf18 int} i = 0;\par
121     {\cf18 int} j = 0;\par
122    \par
123    {\cf19 while} (name[i] != {\cf23 '\\0'}) \{\par
124             filename[j] = name[i]; {\cf20 // Armazena o caractere na palavra}\par
125             j++;\par
126             i++;\par
127     \}\par
128     filename[j] = {\cf23 '\\0'};\par
129     printInfo(filename);\par
130 \par
131     FILE* file = fopen(filename, {\cf22 "r"});\par
132     {\cf19 if} (file == NULL) \{\par
133         printError({\cf22 "Failed to open file for reading."});\par
134         {\cf19 return} NULL;\par
135     \}\par
136 \par
137     fseek(file, 0, SEEK_END);\par
138     {\cf18 long} fileLength = ftell(file);\par
139     fseek(file, 0, SEEK_SET);\par
140 \par
141     {\cf18 char}* content = ({\cf18 char}*)malloc(fileLength + 1);\par
142     fread(content, 1, fileLength, file);\par
143     content[fileLength] = {\cf23 '\\0'};\par
144 \par
145     fclose(file);\par
146     {\cf19 return} content;\par
147     \par
148 \}\par
}
}
{\xe \v removeFile\:util.c}
{\xe \v util.c\:removeFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removeFile (char *  {\i file})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um arquivo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{Nome do arquivo a ser removido.\cell }
{\row }
}
Remove o arquivo com o nome especificado. Verifica se o arquivo existe usando a fun\'E7\'E3o access(). Se o arquivo n\'E3o existir, imprime uma mensagem de erro e retorna. Caso contr\'E1rio, remove o arquivo usando a fun\'E7\'E3o remove(). \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 293                             \{\par
294 \par
295     {\cf18 char} filE[100];\par
296     {\cf18 int} i = 0;\par
297     {\cf18 int} j = 0;\par
298    \par
299    {\cf19 while} (file[i] != {\cf23 '\\0'}) \{\par
300             filE[j] = file[i]; {\cf20 // Armazena o caractere na palavra}\par
301             j++;\par
302             i++;\par
303     \}\par
304     filE[j] = {\cf23 '\\0'};\par
305     {\cf20 // Verificar se o arquivo existe}\par
306     {\cf19 if} (access(filE, F_OK) != 0) \{\par
307         printf({\cf22 "O arquivo %s n\'E3o existe.\\n"}, filE);\par
308         {\cf19 return};\par
309     \}\par
310 \par
311     {\cf20 // Remover o arquivo}\par
312     {\cf18 int} result = remove(filE);\par
313 \par
314 \}\par
}
}
{\xe \v searchDirectoryFiles\:util.c}
{\xe \v util.c\:searchDirectoryFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void searchDirectoryFiles (char *  {\i path}, {\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pesquisa os arquivos em um diret\'F3rio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do diret\'F3rio a ser pesquisado. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista onde os nomes dos arquivos ser\'E3o armazenados.\cell }
{\row }
}
Abre o diret\'F3rio especificado. Se o diret\'F3rio n\'E3o puder ser aberto, imprime uma mensagem de erro e retorna. L\'EA os arquivos no diret\'F3rio um por um. Para cada arquivo encontrado que n\'E3o seja um diret\'F3rio, insere o nome na lista especificada. Fecha o diret\'F3rio ap\'F3s a leitura. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 328                                                     \{\par
329 \par
330         {\cf20 // Abrir a pasta de conte\'FAdo}\par
331         DIR* contentDir = opendir(path);\par
332         {\cf19 if} (contentDir == NULL) \{\par
333             printError({\cf22 "Failed to open content directory."});\par
334             {\cf19 return};\par
335         \}\par
336 \par
337         {\cf20 // Ler os arquivos na pasta de conte\'FAdo}\par
338         {\cf17 struct }dirent* entry;\par
339         {\cf19 while} ((entry = readdir(contentDir)) != NULL) \{\par
340             {\cf19 if} (entry->d_type == DT_REG) \{  \par
341                  lst_insere(header, entry->d_name);\par
342             \}\par
343         \}\par
344 \par
345         closedir(contentDir);\par
346 \}\par
}
}
{\xe \v writeTextFile\:util.c}
{\xe \v util.c\:writeTextFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeTextFile (const char *  {\i filename}, const char *  {\i content})}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escreve o conte\'FAdo em um arquivo de texto. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{Nome do arquivo onde o conte\'FAdo ser\'E1 escrito. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{Conte\'FAdo a ser escrito no arquivo.\cell }
{\row }
}
Escreve o conte\'FAdo fornecido em um arquivo de texto com o nome especificado. Primeiro, copia o nome do arquivo para uma nova vari\'E1vel local. Em seguida, tenta abrir o arquivo em modo escrita. Se a abertura falhar, imprime uma mensagem de erro e retorna. Escreve o conte\'FAdo no arquivo e fecha-o ap\'F3s a escrita. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 197                                                               \{\par
198     \par
199     {\cf18 char} fileName[100];\par
200     strcpy(fileName, filename);\par
201 \par
202     FILE* file = fopen(fileName, {\cf22 "w"});\par
203     {\cf19 if} (file == NULL) \{\par
204         printError({\cf22 "Failed to open file for writing."});\par
205         {\cf19 return};\par
206     \}\par
207 \par
208     fputs(content, file);\par
209     fclose(file);\par
210 \}\par
}
}
{\xe \v writeTextFileNextLine\:util.c}
{\xe \v util.c\:writeTextFileNextLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeTextFileNextLine (const char *  {\i name}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escreve o conte\'FAdo em um arquivo de texto na pr\'F3xima linha. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{Nome do arquivo onde o conte\'FAdo ser\'E1 escrito. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Conte\'FAdo a ser escrito no arquivo.\cell }
{\row }
}
Escreve o conte\'FAdo fornecido em um arquivo de texto com o nome especificado. Primeiro, armazena o nome do arquivo em uma vari\'E1vel local. Em seguida, tenta abrir o arquivo em modo anexo (append). Se a abertura falhar, imprime uma mensagem de erro e retorna. Insere uma quebra de linha no arquivo e escreve o texto fornecido. Fecha o arquivo ap\'F3s a escrita. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 162                                                               \{\par
163     {\cf18 char} filename[100];\par
164     {\cf18 int} i = 0;\par
165     {\cf18 int} j = 0;\par
166    \par
167    {\cf19 while} (name[i] != {\cf23 '\\0'}) \{\par
168             filename[j] = name[i]; {\cf20 // Armazena o caractere na palavra}\par
169             j++;\par
170             i++;\par
171     \}\par
172     filename[j] = {\cf23 '\\0'};\par
173     printInfo(filename);\par
174 \par
175     FILE* file = fopen(filename, {\cf22 "a"});\par
176     {\cf19 if} (file == NULL) \{\par
177         printError({\cf22 "Failed to open file for reading."});\par
178         {\cf19 return};\par
179     \}\par
180     fputc({\cf23 '\\n'}, file);\par
181     fputs(text, file);\par
182     fclose(file);\par
183 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo src/utils/utils.h\par \pard\plain 
{\tc\tcl2 \v src/utils/utils.h}
{\xe \v src/utils/utils.h}
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printError} (const char *message)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime uma mensagem de erro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printInfo} (const char *message)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime uma mensagem de informa\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createDirectory} (const char *path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria um diret\'F3rio. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b concatenatePaths} (const char *path1, const char *path2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatena dois caminhos em uma \'FAnica string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b readTextFile} (const char *name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
L\'EA o conte\'FAdo de um arquivo de texto. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeTextFile} (const char *filename, const char *content)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escreve o conte\'FAdo em um arquivo de texto. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fileExists} (const char *filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se um arquivo existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b generateUniqueIdentifier} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gera um identificador \'FAnico. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b contLines} (char *path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conta o n\'FAmero de linhas em um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeFile} (char *file)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeTextFileNextLine} (const char *name, const char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escreve o conte\'FAdo em um arquivo de texto na pr\'F3xima linha. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b searchDirectoryFiles} (char *path, {\b Lista} *header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pesquisa os arquivos em um diret\'F3rio. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v concatenatePaths\:utils.h}
{\xe \v utils.h\:concatenatePaths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * concatenatePaths (const char *  {\i path1}, const char *  {\i path2})}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatena dois caminhos em uma \'FAnica string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path1} \cell }{Primeiro caminho. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path2} \cell }{Segundo caminho. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O caminho combinado resultante da concatena\'E7\'E3o.\par
}}Calcula o tamanho necess\'E1rio para a nova string combinada, aloca mem\'F3ria suficiente e concatena os dois caminhos fornecidos, adicionando uma barra "/" entre eles. Retorna o caminho combinado resultante. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95                                                              \{\par
96     {\cf18 size_t} len1 = strlen(path1);\par
97     {\cf18 size_t} len2 = strlen(path2);\par
98     {\cf18 char}* combined = ({\cf18 char}*)malloc(len1 + len2 + 2);\par
99     strcpy(combined, path1);\par
100     strcat(combined, {\cf22 "/"});\par
101     strcat(combined, path2);\par
102     {\cf19 return} combined;\par
103 \}\par
}
}
{\xe \v contLines\:utils.h}
{\xe \v utils.h\:contLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int contLines (char *  {\i path})}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conta o n\'FAmero de linhas em um arquivo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do arquivo a ser contado. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O n\'FAmero de linhas no arquivo.\par
}}Abre o arquivo especificado em modo leitura e conta o n\'FAmero de quebras de linha para determinar o n\'FAmero de linhas no arquivo. Retorna o total de linhas encontradas. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                          \{\par
59      {\cf20 // nome e local do arquivo que ser\'E1 aberto para}\par
60   {\cf20 // obtermos a quantidade de linhas}\par
61   FILE *arquivo = fopen(path, {\cf22 "r"});\par
62   \par
63   \par
64   {\cf18 int} quant_linhas = 0;\par
65   {\cf18 int} caractere, existe_linhas = 0;\par
66    \par
67   {\cf19 while}((caractere = fgetc(arquivo)) != EOF)\{\par
68     existe_linhas = 1; {\cf20 // h\'E1 conte\'FAdo no arquivo}\par
69      \par
70     {\cf19 if}(caractere == {\cf23 '\\n'})\{ {\cf20 // \'E9 uma quebra de linha?}\par
71       {\cf20 // vamos incrementar a quantidade de linhas}\par
72       quant_linhas++;             \par
73     \} \par
74   \}\par
75  \par
76   {\cf20 // se n\'E3o houver uma quebra de linha na \'FAltima linha}\par
77   {\cf20 // a contagem ser\'E1 sempre um a menos. Assim, \'E9 melhor}\par
78   {\cf20 // incrementar quant_linhas mais uma vez}\par
79   {\cf19 if}(existe_linhas)\par
80     quant_linhas++;\par
81 \par
82     {\cf19 return} quant_linhas;\par
83 \}\par
}
}
{\xe \v createDirectory\:utils.h}
{\xe \v utils.h\:createDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createDirectory (const char *  {\i path})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria um diret\'F3rio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do diret\'F3rio a ser criado.\cell }
{\row }
}
Cria um diret\'F3rio utilizando a fun\'E7\'E3o {\f2 mkdir}  com as permiss\'F5es 0777. Se a cria\'E7\'E3o falhar, imprime uma mensagem de erro e encerra o programa. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                        \{\par
43     {\cf18 int} result = mkdir(path, 0777);\par
44     {\cf19 if} (result != 0) \{\par
45         printError({\cf22 "Failed to create directory."});\par
46         exit(1);\par
47     \}\par
48 \}\par
}
}
{\xe \v fileExists\:utils.h}
{\xe \v utils.h\:fileExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int fileExists (const char *  {\i filename})}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se um arquivo existe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{Nome do arquivo a ser verificado. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna 1 se o arquivo existe, caso contr\'E1rio retorna 0.\par
}}Verifica se um arquivo com o nome especificado existe. Tenta abrir o arquivo em modo leitura. Se o arquivo for aberto com sucesso, fecha-o e retorna 1 indicando que o arquivo existe. Caso contr\'E1rio, retorna 0 indicando que o arquivo n\'E3o existe. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 223                                      \{\par
224     FILE* file = fopen(filename, {\cf22 "r"});\par
225     {\cf19 if} (file != NULL) \{\par
226         fclose(file);\par
227         {\cf19 return} 1;\par
228     \}\par
229     {\cf19 return} 0;\par
230 \}\par
}
}
{\xe \v generateUniqueIdentifier\:utils.h}
{\xe \v utils.h\:generateUniqueIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * generateUniqueIdentifier ()}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gera um identificador \'FAnico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna o identificador \'FAnico gerado.\par
}}Gera um identificador \'FAnico baseado na data e hora atual. Aloca mem\'F3ria suficiente para armazenar o identificador. Obt\'E9m a data e hora atual e formata a string do identificador no formato "%Y%m%d%H%M%S". Retorna o identificador \'FAnico gerado. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 242                                  \{\par
243     {\cf18 char}* identifier = ({\cf18 char}*)malloc((MAX_IDENTIFIER_LENGTH + 1) * {\cf17 sizeof}(char));\par
244 \par
245     {\cf20 // Gerar um identificador \'FAnico baseado na data e hora atual}\par
246     time_t currentTime = time(NULL);\par
247     {\cf17 struct }tm* timeInfo = localtime(&currentTime);\par
248     strftime(identifier, MAX_IDENTIFIER_LENGTH, {\cf22 "%Y%m%d%H%M%S"}, timeInfo);\par
249 \par
250     {\cf19 return} identifier;\par
251 \}\par
}
}
{\xe \v printError\:utils.h}
{\xe \v utils.h\:printError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printError (const char *  {\i message})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime uma mensagem de erro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{Mensagem de erro a ser exibida.\cell }
{\row }
}
Imprime uma mensagem de erro formatada, precedida pela tag [ERROR]. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                      \{\par
22     printf({\cf22 "[ERROR] %s\\n"}, message);\par
23 \}\par
}
}
{\xe \v printInfo\:utils.h}
{\xe \v utils.h\:printInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printInfo (const char *  {\i message})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime uma mensagem de informa\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{Mensagem de informa\'E7\'E3o a ser exibida.\cell }
{\row }
}
Imprime uma mensagem de informa\'E7\'E3o formatada, precedida pela tag [INFO]. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                     \{\par
32     printf({\cf22 "[INFO] %s\\n"}, message);\par
33 \}\par
}
}
{\xe \v readTextFile\:utils.h}
{\xe \v utils.h\:readTextFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * readTextFile (const char *  {\i name})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
L\'EA o conte\'FAdo de um arquivo de texto. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{Nome do arquivo a ser lido. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O conte\'FAdo do arquivo lido como uma string.\par
}}L\'EA o conte\'FAdo de um arquivo de texto com o nome especificado. Primeiro, armazena o nome do arquivo em uma vari\'E1vel local. Em seguida, tenta abrir o arquivo em modo leitura. Se a abertura falhar, imprime uma mensagem de erro e retorna NULL. Calcula o tamanho do arquivo, aloca mem\'F3ria suficiente e l\'EA o conte\'FAdo do arquivo para a string. Adiciona um caractere nulo ao final da string e fecha o arquivo. Retorna o conte\'FAdo do arquivo como uma string. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                                      \{\par
119     {\cf18 char} filename[100];\par
120     {\cf18 int} i = 0;\par
121     {\cf18 int} j = 0;\par
122    \par
123    {\cf19 while} (name[i] != {\cf23 '\\0'}) \{\par
124             filename[j] = name[i]; {\cf20 // Armazena o caractere na palavra}\par
125             j++;\par
126             i++;\par
127     \}\par
128     filename[j] = {\cf23 '\\0'};\par
129     printInfo(filename);\par
130 \par
131     FILE* file = fopen(filename, {\cf22 "r"});\par
132     {\cf19 if} (file == NULL) \{\par
133         printError({\cf22 "Failed to open file for reading."});\par
134         {\cf19 return} NULL;\par
135     \}\par
136 \par
137     fseek(file, 0, SEEK_END);\par
138     {\cf18 long} fileLength = ftell(file);\par
139     fseek(file, 0, SEEK_SET);\par
140 \par
141     {\cf18 char}* content = ({\cf18 char}*)malloc(fileLength + 1);\par
142     fread(content, 1, fileLength, file);\par
143     content[fileLength] = {\cf23 '\\0'};\par
144 \par
145     fclose(file);\par
146     {\cf19 return} content;\par
147     \par
148 \}\par
}
}
{\xe \v removeFile\:utils.h}
{\xe \v utils.h\:removeFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void removeFile (char *  {\i file})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um arquivo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{Nome do arquivo a ser removido.\cell }
{\row }
}
Remove o arquivo com o nome especificado. Verifica se o arquivo existe usando a fun\'E7\'E3o access(). Se o arquivo n\'E3o existir, imprime uma mensagem de erro e retorna. Caso contr\'E1rio, remove o arquivo usando a fun\'E7\'E3o remove(). \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 293                             \{\par
294 \par
295     {\cf18 char} filE[100];\par
296     {\cf18 int} i = 0;\par
297     {\cf18 int} j = 0;\par
298    \par
299    {\cf19 while} (file[i] != {\cf23 '\\0'}) \{\par
300             filE[j] = file[i]; {\cf20 // Armazena o caractere na palavra}\par
301             j++;\par
302             i++;\par
303     \}\par
304     filE[j] = {\cf23 '\\0'};\par
305     {\cf20 // Verificar se o arquivo existe}\par
306     {\cf19 if} (access(filE, F_OK) != 0) \{\par
307         printf({\cf22 "O arquivo %s n\'E3o existe.\\n"}, filE);\par
308         {\cf19 return};\par
309     \}\par
310 \par
311     {\cf20 // Remover o arquivo}\par
312     {\cf18 int} result = remove(filE);\par
313 \par
314 \}\par
}
}
{\xe \v searchDirectoryFiles\:utils.h}
{\xe \v utils.h\:searchDirectoryFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void searchDirectoryFiles (char *  {\i path}, {\b Lista} *  {\i header})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pesquisa os arquivos em um diret\'F3rio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Caminho do diret\'F3rio a ser pesquisado. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{Ponteiro para a lista onde os nomes dos arquivos ser\'E3o armazenados.\cell }
{\row }
}
Abre o diret\'F3rio especificado. Se o diret\'F3rio n\'E3o puder ser aberto, imprime uma mensagem de erro e retorna. L\'EA os arquivos no diret\'F3rio um por um. Para cada arquivo encontrado que n\'E3o seja um diret\'F3rio, insere o nome na lista especificada. Fecha o diret\'F3rio ap\'F3s a leitura. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 328                                                     \{\par
329 \par
330         {\cf20 // Abrir a pasta de conte\'FAdo}\par
331         DIR* contentDir = opendir(path);\par
332         {\cf19 if} (contentDir == NULL) \{\par
333             printError({\cf22 "Failed to open content directory."});\par
334             {\cf19 return};\par
335         \}\par
336 \par
337         {\cf20 // Ler os arquivos na pasta de conte\'FAdo}\par
338         {\cf17 struct }dirent* entry;\par
339         {\cf19 while} ((entry = readdir(contentDir)) != NULL) \{\par
340             {\cf19 if} (entry->d_type == DT_REG) \{  \par
341                  lst_insere(header, entry->d_name);\par
342             \}\par
343         \}\par
344 \par
345         closedir(contentDir);\par
346 \}\par
}
}
{\xe \v writeTextFile\:utils.h}
{\xe \v utils.h\:writeTextFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeTextFile (const char *  {\i filename}, const char *  {\i content})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escreve o conte\'FAdo em um arquivo de texto. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{Nome do arquivo onde o conte\'FAdo ser\'E1 escrito. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{Conte\'FAdo a ser escrito no arquivo.\cell }
{\row }
}
Escreve o conte\'FAdo fornecido em um arquivo de texto com o nome especificado. Primeiro, copia o nome do arquivo para uma nova vari\'E1vel local. Em seguida, tenta abrir o arquivo em modo escrita. Se a abertura falhar, imprime uma mensagem de erro e retorna. Escreve o conte\'FAdo no arquivo e fecha-o ap\'F3s a escrita. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 197                                                               \{\par
198     \par
199     {\cf18 char} fileName[100];\par
200     strcpy(fileName, filename);\par
201 \par
202     FILE* file = fopen(fileName, {\cf22 "w"});\par
203     {\cf19 if} (file == NULL) \{\par
204         printError({\cf22 "Failed to open file for writing."});\par
205         {\cf19 return};\par
206     \}\par
207 \par
208     fputs(content, file);\par
209     fclose(file);\par
210 \}\par
}
}
{\xe \v writeTextFileNextLine\:utils.h}
{\xe \v utils.h\:writeTextFileNextLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeTextFileNextLine (const char *  {\i name}, const char *  {\i text})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escreve o conte\'FAdo em um arquivo de texto na pr\'F3xima linha. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{Nome do arquivo onde o conte\'FAdo ser\'E1 escrito. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{Conte\'FAdo a ser escrito no arquivo.\cell }
{\row }
}
Escreve o conte\'FAdo fornecido em um arquivo de texto com o nome especificado. Primeiro, armazena o nome do arquivo em uma vari\'E1vel local. Em seguida, tenta abrir o arquivo em modo anexo (append). Se a abertura falhar, imprime uma mensagem de erro e retorna. Insere uma quebra de linha no arquivo e escreve o texto fornecido. Fecha o arquivo ap\'F3s a escrita. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 162                                                               \{\par
163     {\cf18 char} filename[100];\par
164     {\cf18 int} i = 0;\par
165     {\cf18 int} j = 0;\par
166    \par
167    {\cf19 while} (name[i] != {\cf23 '\\0'}) \{\par
168             filename[j] = name[i]; {\cf20 // Armazena o caractere na palavra}\par
169             j++;\par
170             i++;\par
171     \}\par
172     filename[j] = {\cf23 '\\0'};\par
173     printInfo(filename);\par
174 \par
175     FILE* file = fopen(filename, {\cf22 "a"});\par
176     {\cf19 if} (file == NULL) \{\par
177         printError({\cf22 "Failed to open file for reading."});\par
178         {\cf19 return};\par
179     \}\par
180     fputc({\cf23 '\\n'}, file);\par
181     fputs(text, file);\par
182     fclose(file);\par
183 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
utils.h\par \pard\plain 
{\tc\tcl2 \v src/utils/utils.h}
{\xe \v src/utils/utils.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef UTILS_H}\par
2 {\cf21 #define UTILS_H}\par
3 {\cf21 #include "lista.h"}\par
4 \par
5 {\cf18 void} printError({\cf17 const} {\cf18 char}* message);\par
6 {\cf18 void} printInfo({\cf17 const} {\cf18 char}* message);\par
7 {\cf18 void} createDirectory({\cf17 const} {\cf18 char}* path);\par
8 {\cf18 char}* concatenatePaths({\cf17 const} {\cf18 char}* path1, {\cf17 const} {\cf18 char}* path2);\par
9 {\cf18 char}* readTextFile({\cf17 const} {\cf18 char}* name);\par
10 {\cf18 void} writeTextFile({\cf17 const} {\cf18 char}* filename, {\cf17 const} {\cf18 char}* content);\par
11 {\cf18 int} fileExists({\cf17 const} {\cf18 char}* filename);\par
12 {\cf18 char}* generateUniqueIdentifier();\par
13 {\cf18 int} contLines({\cf18 char}* path);\par
14 {\cf18 void} removeFile({\cf18 char}* file);\par
15 {\cf18 void} writeTextFileNextLine({\cf17 const} {\cf18 char}* name, {\cf17 const} {\cf18 char}* text);\par
16 {\cf18 void} searchDirectoryFiles({\cf18 char}* path, Lista* header);\par
17 {\cf21 #endif  }{\cf20 // UTILS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo src/versionador.c\par \pard\plain 
{\tc\tcl2 \v src/versionador.c}
{\xe \v src/versionador.c}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "commands/commands.h"}\par
{\f2 #include "utils/utils.h"}\par
{\f2 #include "database/database.h"}\par
{\f2 #include "utils/lista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b iniciar} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicia o versionador chamando a fun\'E7\'E3o {\b iniciarVersionador()}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adiciona} (int argc, char *argv[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona arquivos ao versionador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b registra} (char *texto)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot com o texto especificado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exibirlog} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exibe o log das vers\'F5es. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b logComConteudo} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exibe o log das vers\'F5es com o conte\'FAdo dos arquivos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrar} (char *identificador)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra o conte\'FAdo de uma vers\'E3o espec\'EDfica. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mudar} (char *identificador)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mudarAtual} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para a vers\'E3o atual. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v adiciona\:versionador.c}
{\xe \v versionador.c\:adiciona}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adiciona (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona arquivos ao versionador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argc} \cell }{O n\'FAmero de argumentos. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argv} \cell }{Os argumentos. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                                       \{\par
101     {\cf19 for} ({\cf18 int} i = 2; i < argc; i++) \{\par
102         {\cf19 if} (fileExists(argv[i])) \{\par
103             addFileToSnapshot(argv[i]);\par
104             printInfo({\cf22 "Arquivo adicionado com sucesso."});\par
105         \} {\cf19 else} \{\par
106             printf({\cf22 "Arquivo n\'E3o encontrado: %s"}, argv[i]);\par
107         \}\par
108     \}\par
109 \}\par
}
}
{\xe \v exibirlog\:versionador.c}
{\xe \v versionador.c\:exibirlog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void exibirlog ()}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exibe o log das vers\'F5es. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 127                  \{\par
128     {\cf18 int} numVersions = getSnapshotInfo();\par
129     printInfo({\cf22 "Exibindo log das vers\'F5es:"});\par
130 \par
131     {\cf19 for} ({\cf18 int} i = 0; i < numVersions; i++) \{\par
132         {\cf17 const} {\cf18 char}* versionIdentifier = getCurrentVersionIdentifier(i);\par
133         printf({\cf22 "Vers\'E3o %d: %s\\n"}, i, versionIdentifier);\par
134     \}\par
135 \}\par
}
}
{\xe \v iniciar\:versionador.c}
{\xe \v versionador.c\:iniciar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void iniciar ()}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicia o versionador chamando a fun\'E7\'E3o {\b iniciarVersionador()}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 89                \{\par
90     iniciarVersionador();\par
91 \}\par
}
}
{\xe \v logComConteudo\:versionador.c}
{\xe \v versionador.c\:logComConteudo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void logComConteudo ()}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exibe o log das vers\'F5es com o conte\'FAdo dos arquivos. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141                       \{\par
142     {\cf18 int} numVersions = getSnapshotInfo();\par
143     printInfo({\cf22 "Exibindo conte\'FAdo dos arquivos nas vers\'F5es:"});\par
144     getLogsContent({\cf22 ".versionador/versions.txt"});\par
145     \par
146     \par
147 \}\par
}
}
{\xe \v main\:versionador.c}
{\xe \v versionador.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                  \{\par
21     {\cf20 // Verifica o n\'FAmero de argumentos}\par
22    \par
23     {\cf19 if} (argc < 2) \{\par
24         printf({\cf22 "Uso: versionador.exe <comando> [argumentos]\\n"});\par
25         {\cf19 return} 1;\par
26     \}\par
27 \par
28     {\cf20 // Obt\'E9m o comando a ser executado}\par
29     {\cf18 char} *comando = argv[1];\par
30 \par
31     {\cf20 // Chama a fun\'E7\'E3o correspondente ao comando}\par
32     {\cf19 if} (strcmp(comando, {\cf22 "iniciar"}) == 0) \{\par
33         iniciar();\par
34         \par
35     \} {\cf19 else} {\cf19 if} (strcmp(comando, {\cf22 "adiciona"}) == 0) \{\par
36         adiciona(argc, argv);\par
37     \} {\cf19 else} {\cf19 if} (strcmp(comando, {\cf22 "registra"}) == 0) \{\par
38         {\cf20 // Verifica se foi fornecido o texto do snapshot}\par
39         {\cf19 if} (argc < 3) \{\par
40             printf({\cf22 "Uso: versionador.exe registra \\"Texto do snapshot\\"\\n"});\par
41             {\cf19 return} 1;\par
42         \}\par
43         {\cf18 char} *texto = argv[2];\par
44         registra(texto);\par
45     \} {\cf19 else} {\cf19 if} (strcmp(comando, {\cf22 "log"}) == 0) \{\par
46         {\cf19 for} ({\cf18 int} i = 2; i < argc; i++) \{\par
47         {\cf19 if} (strcmp(argv[i], {\cf22 "--conteudo"}) == 0) \{\par
48             logComConteudo();\par
49         \}{\cf19 else}\{\par
50             exibirlog();\par
51         \}\par
52         \}\par
53         \par
54     \} {\cf19 else} {\cf19 if} (strcmp(comando, {\cf22 "mostrar"}) == 0) \{\par
55         {\cf20 // Verifica se foi fornecido o identificador da vers\'E3o}\par
56         {\cf19 if} (argc < 3) \{\par
57             printf({\cf22 "Uso: versionador.exe mostrar <identificador>\\n"});\par
58             {\cf19 return} 1;\par
59         \}\par
60         {\cf18 char} *identificador = argv[2];\par
61         mostrar(identificador);\par
62     \} {\cf19 else} {\cf19 if} (strcmp(comando, {\cf22 "mudar"}) == 0) \{\par
63         {\cf20 // Verifica se foi fornecido o identificador da vers\'E3o}\par
64         {\cf19 if} (argc < 3) \{\par
65             printf({\cf22 "Uso: versionador.exe mudar <identificador>\\n"});\par
66             {\cf19 return} 1;\par
67         \}{\cf19 else}\{{\cf19 for} ({\cf18 int} i = 2; i < argc; i++) \{\par
68         {\cf19 if} (strcmp(argv[i], {\cf22 "--atual"}) == 0) \{\par
69             mudarAtual();\par
70         \}{\cf19 else}\{\par
71             {\cf18 char} *identificador = argv[2];\par
72             mudar(identificador);\par
73         \}\par
74         \}\par
75         \}\par
76         \par
77      \}{\cf19 else} \{\par
78         printf({\cf22 "Comando inv\'E1lido.\\n"});\par
79         {\cf19 return} 1;\par
80     \}\par
81 \par
82     {\cf19 return} 0;\par
83 \}\par
}
}
{\xe \v mostrar\:versionador.c}
{\xe \v versionador.c\:mostrar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrar (char *  {\i identificador})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra o conte\'FAdo de uma vers\'E3o espec\'EDfica. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identificador} \cell }{O identificador da vers\'E3o. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 155                                   \{\par
156     getVersionContent(identificador, 1);\par
157 \}\par
}
}
{\xe \v mudar\:versionador.c}
{\xe \v versionador.c\:mudar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mudar (char *  {\i identificador})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para uma vers\'E3o espec\'EDfica. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i identificador} \cell }{O identificador da vers\'E3o. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 165                                 \{\par
166     {\cf19 if} (versionExists(identificador)) \{\par
167         changeVersion(identificador);\par
168     \} {\cf19 else} \{\par
169         printf({\cf22 "A vers\'E3o %s n\'E3o existe."}, identificador);\par
170     \}\par
171 \}\par
}
}
{\xe \v mudarAtual\:versionador.c}
{\xe \v versionador.c\:mudarAtual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mudarAtual ()}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda para a vers\'E3o atual. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 177                   \{\par
178     restoreCurrentVersion();\par
179     printInfo({\cf22 "Vers\'E3o atual revertida com sucesso."});\par
180 \}\par
}
}
{\xe \v registra\:versionador.c}
{\xe \v versionador.c\:registra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void registra (char *  {\i texto})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registra um snapshot com o texto especificado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i texto} \cell }{O texto do snapshot. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 117                            \{\par
118     {\cf18 char}* {\cf18 id} = registrarSnapshot(texto);\par
119     saveSnapshotFilesInContent({\cf18 id});\par
120     free({\cf18 id});\par
121 \}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
